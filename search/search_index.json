{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Robotick\u00fd t\u00e1bor","text":""},{"location":"#vitej-na-strankach-robotickeho-tabora-2023","title":"V\u00edtej na str\u00e1nk\u00e1ch Robotick\u00e9ho t\u00e1bora 2023RoboSvitP\u00e1jec\u00ed v\u00fdzvaHrac\u00ed kostkaElectronELKSELKS krabi\u010dka","text":""},{"location":"electron/","title":"O co jde?","text":"<p>Electron je stavebnice pro v\u00fduku z\u00e1kladn\u00edch znalost\u00ed elektroniky. Jednotliv\u00e9 elektronick\u00e9 sou\u010d\u00e1stky jsou um\u00edst\u011bny na samostatn\u00fdch desk\u00e1ch plo\u0161n\u00fdch spoj\u016f.</p> <p>Spojov\u00e1n\u00ed prob\u00edh\u00e1 pomoc\u00ed dr\u00e1t\u016f, kter\u00e9 se zasunou do p\u0159edchystan\u00fdch d\u011br a zajist\u00ed se gumov\u00fdmi \u0161punty. Alternativn\u011b jsou nachyst\u00e1ny pinheady pro p\u0159\u00edpadn\u00e9 pou\u017eit\u00ed \"\u010d\u00ednsk\u00fdch\" kabel\u016f s dutinkami.</p>"},{"location":"electron/#schematicke-znacky","title":"Sch\u00e9matick\u00e9 zna\u010dky","text":"N\u00e1zev Zna\u010dka Electron Zdroj Rezistor Kondenz\u00e1tor Kondenz\u00e1tor polarizovan\u00fd LED Tla\u010d\u00edtko P\u0159ep\u00edna\u010d Potenciometr Tranzistor NPN Tranzistor PNP"},{"location":"electron/#spravne-zapojovani-kabelu-k-soucastkam","title":"Spr\u00e1vn\u00e9 zapojov\u00e1n\u00ed kabel\u016f k sou\u010d\u00e1stk\u00e1m","text":""},{"location":"electron/electron-lesson-1/","title":"Electron lekce 1","text":""},{"location":"electron/electron-lesson-1/#1-tlacitko-rezistor-a-led","title":"1. Tla\u010d\u00edtko, rezistor a LED","text":"<p>Obvod obsahuje zdroj elektrick\u00e9ho nap\u011bt\u00ed, spot\u0159ebi\u010d \u2013 LED, rezistor, kter\u00fd omezuje proud proch\u00e1zej\u00edc\u00ed diodou, sp\u00ednac\u00ed tla\u010d\u00edtko a spojovac\u00ed vodi\u010de.  Spojte na panelu zd\u00ed\u0159ky dle sch\u00e9matu. </p> <p>Po zm\u00e1\u010dknut\u00ed tla\u010d\u00edtka se rozsv\u00edt\u00ed LED. Stiskem tla\u010d\u00edtka se spoj\u00ed jeho kontakty a uzav\u0159e se elektrick\u00fd obvod. Elektrick\u00fd proud te\u010de po dobu stisku tla\u010d\u00edtka od plus (+) p\u00f3lu baterie p\u0159es propojen\u00e9 sou\u010d\u00e1stky k minus (-) p\u00f3lu baterie. Ve sch\u00e9matu je dioda zapojena v propustn\u00e9m sm\u011bru neboli propou\u0161t\u00ed proud a ten ji rozsv\u011bcuje. Po uvoln\u011bn\u00ed tla\u010d\u00edtka se elektrick\u00fd obvod p\u0159eru\u0161\u00ed, proud p\u0159estane proch\u00e1zet a LED zhasne. </p> <p>Nyn\u00ed zkuste p\u0159ipojit LED obr\u00e1cen\u011b (proho\u010fte vz\u00e1jemn\u011b konce vodi\u010d\u016f upevn\u011bn\u00e9 ve zd\u00ed\u0159k\u00e1ch). Dioda je nyn\u00ed zapojena v z\u00e1v\u011brn\u00e9m sm\u011bru, nepropou\u0161t\u00ed proud, a tedy po zm\u00e1\u010dknut\u00ed tla\u010d\u00edtka nesv\u00edt\u00ed. </p> <p>Ov\u011b\u0159ili jste si tak z\u00e1kladn\u00ed vlastnost polovodi\u010dov\u00e9 diody \u2013 propou\u0161t\u00ed proud jen v jednom sm\u011bru. T\u00edmto jednoduch\u00fdm zapojen\u00edm si m\u016f\u017eete v\u017edy, kdy\u017e m\u00e1te pochybnosti, ov\u011b\u0159it, jestli jsou jednotliv\u00e9 diody v po\u0159\u00e1dku.</p> <p>M\u016f\u017eete rozsv\u00edtit \u010dervenou, \u017elutou nebo zelenou diodu. </p> <p>POZOR! Je nutn\u00e9, aby v obvodu s LED byl v\u017edy za\u0159azen omezovac\u00ed rezistor. Pokud byste p\u0159ipojili LED v propustn\u00e9m sm\u011bru p\u0159\u00edmo na zdroj nap\u011bt\u00ed \u2013 baterii, zcela jist\u011b byste LED zni\u010dili.</p> <p></p>"},{"location":"electron/electron-lesson-1/#merene-hodnoty","title":"M\u011b\u0159en\u00e9 hodnoty","text":"<p>Nap\u011bt\u00ed na diod\u011b je ni\u017e\u0161\u00ed ne\u017e na vstupu. Je to zp\u016fsobeno rezistorem, kter\u00fd sni\u017euje prot\u00e9kaj\u00edc\u00ed proud a nap\u011bt\u00ed. Nap\u011bt\u00ed na LED by m\u011blo b\u00fdt zhruba 2 V.  Proud proch\u00e1zej\u00edc\u00ed LED je p\u0159ibli\u017en\u011b 16 mA, co\u017e sta\u010d\u00ed na to, aby se LED rozsv\u00edtila. </p>"},{"location":"electron/electron-lesson-1/#2-seriove-zapojeni-rezistoru","title":"2. S\u00e9riov\u00e9 zapojen\u00ed rezistor\u016f","text":"<p>Vlastnosti s\u00e9riov\u00e9ho spojen\u00ed rezistor\u016f si m\u016f\u017eete ov\u011b\u0159it na modelu dle sch\u00e9matu. Po zapojen\u00ed se rozsv\u00edt\u00ed. Pokud je p\u0159ep\u00edna\u010d v poloze naho\u0159e, proud mus\u00ed proch\u00e1zet ob\u011bma rezistory, z nich\u017e ka\u017ed\u00fd sv\u00fdm d\u00edlem zmen\u0161uje celkov\u00fd proud v obvodu a LED sv\u00edt\u00ed slab\u011bji. Pokud p\u0159epnete p\u0159ep\u00edna\u010d do spodn\u00ed polohy, proudu se do cesty nestav\u00ed rezistor 560 \u2126 a prot\u00e9k\u00e1 tak pouze rezistorem 180\u2126. Souhrnn\u00fd odpor je tak men\u0161\u00ed, a proto je proud v\u011bt\u0161\u00ed, a LED sv\u00edt\u00ed siln\u011bji. V tomto sch\u00e9matu jsou za\u0159azeny v s\u00e9rii dva rezistory, ale je mo\u017eno takhle za sebou propojit rezistor\u016f v\u00edce. V\u00fdsledn\u00fd odpor R s\u00e9riov\u00e9 kombinace rezistor\u016f se rovn\u00e1 sou\u010dtu hodnot jednotliv\u00fdch rezistor\u016f, v na\u0161em p\u0159\u00edpad\u011b R = R3 + R2 = 560 + 180 = 740 \u2126</p> <p></p>"},{"location":"electron/electron-lesson-1/#merene-hodnoty_1","title":"M\u011b\u0159en\u00e9 hodnoty","text":"<p>Nap\u011bt\u00ed na LED, p\u0159i pozici p\u0159ep\u00edna\u010de v poloze dole, by m\u011blo b\u00fdt zhruba 2 V, v poloze naho\u0159e je to o n\u011bco m\u00e9n\u011b 1,9 V. </p> <p>Proud proch\u00e1zej\u00edc\u00ed LED p\u0159i pozici p\u0159ep\u00edna\u010de v poloze dole, je stejn\u00fd jako v prvn\u00edm p\u0159\u00edklad\u011b, tedy 16 mA, v poloze naho\u0159e je to o dost m\u00e9n\u011b skoro 4,3 mA, co\u017e st\u00e1le sta\u010d\u00ed na to, aby se LED rozsv\u00edtila.</p>"},{"location":"electron/electron-lesson-1/#3-paralelni-zapojeni-rezistoru","title":"3. Paraleln\u00ed zapojen\u00ed rezistor\u016f","text":"<p>Na tomto zapojen\u00ed si m\u016f\u017eete vyzkou\u0161et, jak\u00e9 vlastnosti bude m\u00edt zapojen\u00ed rezistor\u016f paraleln\u011b (soub\u011b\u017en\u011b) neboli vedle sebe. Zapojte obvod podle sch\u00e9matu. Rozsv\u00edt\u00ed se LED a po stisku tla\u010d\u00edtka se rozsv\u00edt\u00ed siln\u011bji. Vysv\u011btlen\u00ed je n\u00e1sleduj\u00edc\u00ed: pokud je tla\u010d\u00edtko rozepnuto, proud proch\u00e1z\u00ed p\u0159es rezistor a rozsv\u011bcuje LED pon\u011bkud slab\u011bji. Po stisknut\u00ed tla\u010d\u00edtka za\u010dne proud proch\u00e1zet ob\u011bma rezistory sou\u010dasn\u011b a je proto v\u011bt\u0161\u00ed. To se projev\u00ed zv\u011bt\u0161en\u00edm jasu LED.</p> <p>Pro snadn\u011bj\u0161\u00ed pochopen\u00ed principu si p\u0159edstavte situaci, kdy jedn\u011bmi dve\u0159mi proud\u00ed do kina z\u00e1stup lid\u00ed. V okam\u017eiku, kdy se otev\u0159ou druh\u00e9 dve\u0159e, za\u010dnou vch\u00e1zet lid\u00e9 i t\u011bmito dve\u0159mi a kino se za\u010dne plnit rychleji.</p> <p>Vra\u0165me se k na\u0161emu sch\u00e9matu. V s\u00e9riov\u00e9m zapojen\u00ed podle n\u00e1vodu \u010d.2 byl v\u00fdsledn\u00fd odpor v\u011bt\u0161\u00ed ne\u017e odpor kter\u00e9hokoli pou\u017eit\u00e9ho rezistoru. Paraleln\u011b m\u016f\u017eeme spojit dva i v\u00edce rezistor\u016f. V\u00fdsledn\u00fd odpor je v\u017edy men\u0161\u00ed ne\u017e hodnota nejmen\u0161\u00edho z rezistor\u016f zapojen\u00fdch paraleln\u011b. P\u0159esn\u011b se v\u00fdsledn\u00fd odpor R v na\u0161em sch\u00e9matu vypo\u010dte podle vztahu:</p> <p></p> <p></p>"},{"location":"electron/electron-lesson-2/","title":"Electron lekce 2","text":""},{"location":"electron/electron-lesson-2/#4-and","title":"4. AND","text":"<p>Pomoc\u00ed tohoto obvodu pochop\u00edte princip s\u00e9riov\u00e9ho zapojen\u00ed sp\u00edna\u010d\u016f, obvod je z\u00e1rove\u0148 modelem tzv. logick\u00e9 funkce \"AND\" (\u010desky \"a z\u00e1rove\u0148\"). Po propojen\u00ed dle sch\u00e9matu p\u0159epn\u011bte p\u0159ep\u00edna\u010d nahoru do polohy \"zapnuto\" a zm\u00e1\u010dkn\u011bte tla\u010d\u00edtko \u2013 rozsv\u00edt\u00ed se LED. Po uvoln\u011bn\u00ed tla\u010d\u00edtka LED zhasne. Pokud p\u0159epnete p\u0159ep\u00edna\u010d dol\u016f do polohy \"vypnuto\", po zm\u00e1\u010dknut\u00ed tla\u010d\u00edtka se LED nerozsv\u00edt\u00ed. Vypl\u00fdv\u00e1 z toho, \u017ee LED se p\u0159i s\u00e9riov\u00e9m zapojen\u00ed sp\u00edna\u010de a tla\u010d\u00edtka rozsv\u00edt\u00ed jen tehdy, kdy\u017e jsou z\u00e1rove\u0148 sepnuty sp\u00edna\u010d i tla\u010d\u00edtko. Logick\u00e1 funkce obecn\u011b vyjad\u0159uje vztah mezi vstupn\u00edmi veli\u010dinami, v na\u0161em p\u0159\u00edpad\u011b stavy sp\u00edna\u010de a tla\u010d\u00edtka (zapnuto nebo vypnuto) a v\u00fdstupn\u00ed veli\u010dinou, v tomto zapojen\u00ed je to jas LED. Logick\u00e1 funkce se zapisuje do tabulky. V na\u0161em zapojen\u00ed p\u0159i\u0159ad\u00edme stav\u016fm, kdy jsou tla\u010d\u00edtko nebo sp\u00edna\u010d sepnuty, logickou jedni\u010dku ( 1 ) \u2013 zapnuto, vypnut\u00e9mu tla\u010d\u00edtku nebo sp\u00edna\u010di logickou nulu ( 0 ) - vypnuto. Pokud LED sv\u00edt\u00ed, budeme br\u00e1t, \u017ee v\u00fdstupn\u00ed hodnota je logick\u00e1 1, pokud nesv\u00edt\u00ed, je hodnota v\u00fdstupn\u00ed veli\u010diny logick\u00e1 0. </p> <p>Ve sv\u00e9m okol\u00ed byste na\u0161li p\u0159ekvapiv\u00e9 mno\u017estv\u00ed aplikaci t\u00e9to i jin\u00fdch logick\u00fdch funkci. Tak nap\u0159\u00edklad, pokud si chcete koupit n\u011bjakou v\u011bc, mus\u00ed b\u00fdt v obchod\u011b a z\u00e1rove\u0148 mus\u00edte m\u00edt na ni pen\u00edze. Cel\u00fd fascinuj\u00edc\u00ed sv\u011bt po\u010d\u00edta\u010d\u016f je zalo\u017een na logick\u00fdch nul\u00e1ch a jedni\u010dk\u00e1ch a na neskute\u010dn\u011b rychl\u00e9m prov\u00e1d\u011bn\u00ed logick\u00fdch operaci podle p\u0159edem sestaven\u00fdch program\u016f.</p>"},{"location":"electron/electron-lesson-2/#tabulka-logickych-hodnot-funkce-and","title":"Tabulka logick\u00fdch hodnot funkce AND:","text":"Tla\u010d\u00edtko Sp\u00edna\u010d LED 0 0 0 0 1 0 1 0 0 1 1 1"},{"location":"electron/electron-lesson-2/#5-or","title":"5. OR","text":"<p>Paraleln\u00ed neboli soub\u011b\u017en\u00e9 zapojen\u00ed sp\u00edna\u010de a tla\u010d\u00edtka m\u00e1 tu vlastnost, \u017ee LED lze zapnout nez\u00e1visle bud tla\u010d\u00edtkem nebo sp\u00edna\u010dem. Na rozd\u00edl od zapojen\u00ed \u010d.4, kde proud mohl prot\u00e9kat pouze jednou cestou, a to jen pokud byly sp\u00edna\u010d i tla\u010d\u00edtko sepnuty, v tomto zapojen\u00ed m\u016f\u017ee t\u00e9ci proud bu\u010f sepnut\u00fdm tla\u010d\u00edtkem nebo sepnut\u00fdm sp\u00edna\u010dem anebo ob\u011bma najednou. Tyto vlastnosti odpov\u00eddaj\u00ed logick\u00e9 funkci \"OR\" (\u010desky \"nebo\"). Pokud op\u011bt ozna\u010d\u00edme stavy tla\u010d\u00edtka, sp\u00edna\u010de a LED logick\u00fdmi hodnotami, z\u00edsk\u00e1me pro funkci \"OR\" tabulku n\u00ed\u017ee.</p> <p>Jako p\u0159\u00edklad situace vyjad\u0159uj\u00edc\u00ed tuto logickou funkci lze nap\u0159\u00edklad uv\u00e9st: p\u016fjdete-li kupovat pe\u010divo, m\u016f\u017eete koupit bud rohl\u00edk nebo housku anebo tak\u00e9 oboj\u00ed.</p>"},{"location":"electron/electron-lesson-2/#tabulka-logickych-hodnot-funkce-or","title":"Tabulka logick\u00fdch hodnot funkce OR:","text":"Tla\u010d\u00edtko Sp\u00edna\u010d LED 0 0 0 0 1 1 1 0 1 1 1 1"},{"location":"electron/electron-lesson-2/#ukol-navic","title":"\u00dakol nav\u00edc","text":""},{"location":"electron/electron-lesson-2/#xor","title":"XOR","text":"<p>Vy\u0159e\u0161te za pou\u017eit\u00ed dvou sad Electronu (ve dvojici). K zapojen\u00ed si tak\u00e9 nakreslete schema. </p> Vstup 0 Vstup 1 LED 0 0 0 0 1 1 1 0 1 1 1 0"},{"location":"electron/electron-lesson-2/#6-prepinani-barev","title":"6. P\u0159ep\u00edn\u00e1n\u00ed barev","text":"<p>Po sestaven\u00ed se rozsv\u00edt\u00ed \u010derven\u00e1 nebo \u017elut\u00e1 LED podle toho, v jak\u00e9 poloze se zrovna nach\u00e1z\u00ed p\u0159ep\u00edna\u010d. P\u0159ep\u00edna\u010dem m\u016f\u017eete tedy st\u0159\u00eddat svit \u010derven\u00e9 a \u017elut\u00e9 LED.</p> <p>Obvod obsahuje, krom\u011b zdroje nap\u011bt\u00ed, omezovac\u00ed rezistor 180\u2126, kter\u00fd chr\u00e1n\u00ed LED p\u0159ed proudov\u00fdm p\u0159et\u00ed\u017een\u00edm a p\u0159ep\u00edna\u010d, kter\u00fd pou\u0161t\u00ed, v z\u00e1vislosti na sv\u00e9 poloze, proud do jedn\u00e9 nebo druh\u00e9 LED.</p> <p></p>"},{"location":"electron/electron-lesson-2/#7-potenciometr-jako-promenny-rezistor","title":"7. Potenciometr jako prom\u011bnn\u00fd rezistor","text":"<p>Zapojte obvod podle sch\u00e9matu. Rozsv\u00edt\u00ed se LED siln\u011b nebo slab\u011bji podle toho, v jak\u00e9 poloze je regula\u010dn\u00ed knofl\u00edk potenciometru. Ot\u00e1\u010den\u00edm regula\u010dn\u00edho knofl\u00edku lze plynule m\u011bnit jas LED. Pro pochopen\u00ed funkce potenciometru je dobr\u00e9 v\u011bd\u011bt, jak je mechanicky konstruov\u00e1n. Pohled na potenciometr bez regula\u010dn\u00edho knofl\u00edku je na obr 9.2. Odporov\u00e1 dr\u00e1ha podkovovit\u00e9ho tvaru je tvo\u0159ena vrstvi\u010dkou odporov\u00e9ho laku, na jej\u00ed konce jsou vodiv\u011b p\u0159ipojeny kovov\u00e9 v\u00fdvody. Mezi t\u011bmito v\u00fdvody je st\u00e1l\u00fd odpor dan\u00fd vlastnostmi odporov\u00e9 dr\u00e1hy, ve stavebnici je potenciometr 10 k\u2126. Znamen\u00e1 to, \u017ee jeho odporov\u00e1 dr\u00e1ha m\u00e1 odpor 10 k\u2126. A\u017e potud by byly elektrick\u00e9 vlastnosti shodn\u00e9 s pevn\u00fdm rezistorem. Potenciometr m\u00e1 v\u0161ak nav\u00edc tzv. jezdce \u2013 pl\u00ed\u0161ek, kter\u00fd se dot\u00fdk\u00e1 odporov\u00e9 dr\u00e1hy v jednom m\u00edst\u011b a toto m\u00edsto dotyku se d\u00e1 ot\u00e1\u010den\u00edm knofl\u00edku m\u011bnit. Vypl\u00fdv\u00e1 z toho, \u017ee odpor mezi jezdcem a n\u011bkter\u00fdm z konc\u016f odporov\u00e9 dr\u00e1hy je z\u00e1visl\u00fd na poloze jezdce a \u017ee sou\u010det odpor\u016f mezi jezdcem a ob\u011bma konci dr\u00e1hy je v\u017edy roven celkov\u00e9mu odporu odporov\u00e9 dr\u00e1hy. Pokud je jezdec oto\u010den zcela k jednomu konci dr\u00e1hy, je odpor mezi jezdcem a t\u00edmto koncem dr\u00e1hy t\u00e9m\u011b\u0159 nulov\u00fd, mezi jezdcem a druh\u00fdm koncem dr\u00e1hy t\u00e9m\u011b\u0159 roven celkov\u00e9mu odporu odporov\u00e9 dr\u00e1hy. </p> <p></p> <p>Tyto vlastnosti si m\u016f\u017eete ov\u011b\u0159it, pokud budete m\u011bnit polohu regula\u010dn\u00edho knofl\u00edku a p\u0159ep\u00ednat p\u0159ep\u00edna\u010d. Pokud bude jezdec uprost\u0159ed, bude sv\u00edtit LED p\u0159i obou poloh\u00e1ch p\u0159ep\u00edna\u010de stejn\u011b (slab\u011b). Pokud pooto\u010d\u00edte regula\u010dn\u00ed knofl\u00edk mimo st\u0159ed, bude p\u0159i p\u0159ep\u00edn\u00e1n\u00ed p\u0159ep\u00edna\u010de m\u011bnit LED skokem sv\u016fj jas podle toho, jak\u00fd odpor je pr\u00e1v\u011b mezi jezdcem a koncem odporov\u00e9 dr\u00e1hy. Op\u011bt plat\u00ed, \u017ee \u010d\u00edm men\u0161\u00ed je odpor obvodu, t\u00edm v\u011bt\u0161\u00ed je proud a tak\u00e9 jas LED.</p> <p></p>"},{"location":"electron/electron-lesson-2/#8-prolinani-barev","title":"8. Prol\u00edn\u00e1n\u00ed barev","text":"<p>Zapojte obvod dle sch\u00e9matu, rozsv\u00edt\u00ed se v\u00e1m jedna nebo ob\u011b LED podle toho, v jak\u00e9 poloze se nach\u00e1z\u00ed zrovna jezdec potenciometru. Pokud je jezdec bl\u00ed\u017ee ke krajn\u00ed poloze \"-\", sv\u00edt\u00ed jasn\u011bji \u017elut\u00e1 LED, pokud je bl\u00ed\u017ee poloze \"+\", sv\u00edt\u00ed jasn\u011bji \u010derven\u00e1 LED. Ot\u00e1\u010den\u00edm knofl\u00edku m\u016f\u017eete m\u011bnit jas obou LED tak, \u017ee to vypad\u00e1, jako by se sv\u011btlo \"p\u0159el\u00e9valo\" z jedn\u00e9 do druh\u00e9.</p> <p></p>"},{"location":"electron/electron-lesson-2/#9-kondenzator-neboli-zasobarna-energie","title":"9. Kondenz\u00e1tor neboli z\u00e1sob\u00e1rna energie","text":"<p>Zapojte obvod dle sch\u00e9matu, p\u0159i zapojov\u00e1n\u00ed m\u011bjte p\u0159ep\u00edna\u010d ve spodn\u00ed poloze. Nyn\u00ed p\u0159epn\u011bte p\u0159ep\u00edna\u010d nahoru a \u010derven\u00e1 LED blikne. P\u0159epn\u011bte dol\u016f a blikne \u017elut\u00e1 LED. Co se v obvodu odehr\u00e1lo? Kondenz\u00e1tor je elektronick\u00e1 sou\u010d\u00e1stka, kter\u00e1 je schopna uchovat elektrick\u00fd n\u00e1boj. Znamen\u00e1 to, \u017ee pokud ke kondenz\u00e1toru p\u0159ipoj\u00edme zdroj nap\u011bt\u00ed (v na\u0161em p\u0159\u00edpad\u011b baterii), kondenz\u00e1tor se nabije a podr\u017e\u00ed si nap\u011bt\u00ed i po odpojen\u00ed zdroje. Kdy\u017e nyn\u00ed p\u0159ipoj\u00edme ke kondenz\u00e1toru elektrick\u00fd spot\u0159ebi\u010d (v na\u0161em p\u0159\u00edpad\u011b LED), bude se kondenz\u00e1tor s\u00e1m po ur\u010ditou dobu chovat jako zdroj nap\u011bt\u00ed a LED sv\u00edt\u00ed, ne\u017e se kondenz\u00e1tor vybije. P\u0159i nab\u00edjen\u00ed te\u010de kondenz\u00e1torem proud po dobu, ne\u017e se nap\u011bt\u00ed kondenz\u00e1toru vyrovn\u00e1 s nap\u011bt\u00edm zdroje \u2013 to n\u00e1m signalizuje v na\u0161em modelu \u010derven\u00e1 LED. P\u0159i vyb\u00edjen\u00ed se rozsv\u00edt\u00ed \u017elut\u00e1 LED. Doba nab\u00edjen\u00ed a vyb\u00edjen\u00ed kondenz\u00e1toru z\u00e1vis\u00ed na jeho kapacit\u011b (\u010d\u00edm v\u011bt\u0161\u00ed kapacita, t\u00edm je doba del\u0161\u00ed) a velikosti elektrick\u00e9ho proudu, kter\u00fdm se kondenz\u00e1tor nabij\u00ed nebo vyb\u00edj\u00ed (\u010d\u00edm men\u0161\u00ed je proud, t\u00edm d\u00e9le prob\u00edh\u00e1 nab\u00edjen\u00ed nebo vyb\u00edjen\u00ed). V na\u0161em obvodu je proud omezen pouze rezistorem 180 \u2126, tak\u017ee nab\u00edjen\u00ed a vyb\u00edjen\u00ed prob\u00edh\u00e1 rychle a LED sv\u00edt\u00ed jen kr\u00e1tce. Kdybychom cht\u011bli d\u00e9lku svitu prodlou\u017eit, museli bychom kondenz\u00e1tor nab\u00edjet p\u0159es v\u011bt\u0161\u00ed rezistor, proud by byl ov\u0161em mal\u00fd na to, aby rozsv\u00edtil LED pln\u00fdm jasem. Tento probl\u00e9m je snadno \u0159e\u0161iteln\u00fd pou\u017eit\u00edm tranzistoru, co\u017e si budete moci vyzkou\u0161et v dal\u0161\u00edch zapojen\u00edch. Jednotka kapacity kondenz\u00e1toru je 1 F (Farad), v praxi se ov\u0161em pou\u017e\u00edvaj\u00ed kondenz\u00e1tory s kapacitou mnohon\u00e1sobn\u011b men\u0161\u00ed, ne\u017e 1 F, tomu odpov\u00eddaj\u00ed i b\u011b\u017en\u011b pou\u017e\u00edvan\u00e9 jednotky:</p> <p>1 \u00b5F (\u010dti mikrofarad)  =   1 miliontina faradu  1 nF (\u010dti nanofarad)   =   1 tis\u00edcina mikrofaradu  1 pF (\u010dti pikofarad)    =   1 tis\u00edcina nanofaradu   </p> <p>Ve sch\u00e9matech se u\u017e v\u011bt\u0161inou nep\u00ed\u0161e p\u00edsmeno \"F\"- zna\u010dka Faradu za hodnotu kondenz\u00e1toru, proto\u017ee je z\u0159ejm\u00e9 ze sch\u00e9matick\u00e9 zna\u010dky, \u017ee jde o kondenz\u00e1tor a hodnota je ve Faradech.</p> <p>P\u0159i experimentov\u00e1n\u00ed a zapojov\u00e1n\u00ed elektrolytick\u00fdch kondenz\u00e1tor\u016f do obvodu je nutno db\u00e1t, aby v\u00fdvod \"+\" byl p\u0159ipojen na vy\u0161\u0161\u00ed nap\u011bt\u00ed, ne\u017e v\u00fdvod \"-\". P\u0159i dlouhodob\u011bj\u0161\u00edm opa\u010dn\u00e9m p\u0159ipojen\u00ed by mohlo doj\u00edt k po\u0161kozen\u00ed kondenz\u00e1toru.</p> <p></p>"},{"location":"electron/electron-lesson-3/","title":"Electron lekce 3","text":""},{"location":"electron/electron-lesson-3/#10-experiment-s-tranzistorem","title":"10. Experiment s tranzistorem","text":"<p>Tranzistor je polovodi\u010dov\u00e1 sou\u010d\u00e1stka se t\u0159emi v\u00fdvody, kter\u00e9 se naz\u00fdvaj\u00ed b\u00e1ze, ve sch\u00e9matu ozna\u010den\u00e1 jako(B), kolektor (C) a emitor (E).</p> <p>Nej\u010dast\u011bji se tranzistor pou\u017e\u00edv\u00e1 jako zesilova\u010d elektrick\u00e9ho proudu, jinak \u0159e\u010deno, prost\u0159ednictv\u00edm tranzistoru m\u016f\u017eeme mal\u00fdmi zm\u011bnami proudu I tekouc\u00edho do b\u00e1ze tranzistoru vyvol\u00e1vat velk\u00e9 zm\u011bny proudu Ic tekouc\u00edho do kolektoru tranzistoru. Zjednodu\u0161en\u011b lze tak\u00e9 \u0159\u00edct, \u017ee tranzistor p\u0159edstavuje mezi kolektorem a emitorem odpor, jeho\u017e hodnotu lze m\u011bnit elektronicky (nikoli mechanicky, jako u potenciometru) velikost\u00ed proudu I, kter\u00fd te\u010de do b\u00e1ze. B\u011b\u017en\u00e9 tranzistory zesiluj\u00ed v\u00edce ne\u017e 100 kr\u00e1t, tak\u017ee k sepnut\u00ed proudu Ic = 100 mA sta\u010d\u00ed, aby do b\u00e1ze tekl proud 1 mA. Proud v na\u0161em modelu te\u010de podle sch\u00e9matu od plus p\u00f3lu zdroje (baterie) a d\u011bl\u00ed se na proud tekouc\u00ed do b\u00e1ze p\u0159es odpor R a proud tekouc\u00ed do kolektoru p\u0159es LED a ochrann\u00fd odpor R- Mezi b\u00e1z\u00ed \u2013 emitorem se chov\u00e1 tranzistor jako dioda v propustn\u00e9m sm\u011bru, zjednodu\u0161en\u011b m\u016f\u017eeme \u0159\u00edci, \u017ee m\u00e1 zanedbateln\u00fd odpor. Proud b\u00e1ze je tedy ur\u010den velikosti odporu p\u0159ipojen\u00e9ho k b\u00e1zi (\u010c\u00edm v\u011bt\u0161\u00ed odpor, t\u00edm men\u0161\u00ed proud).</p> <p>Zapojte si nyn\u00ed obvod podle obr\u00e1zku na lev\u00e9 stran\u011b, zjist\u00edte, \u017ee \u017elut\u00e1 LED sotva znateln\u011b sv\u00edt\u00ed. Proud, kter\u00fd te\u010de LED p\u0159es odpor 100 k\u2126 je p\u0159\u00edli\u0161 mal\u00fd. V zapojen\u00ed napravo sta\u010d\u00ed tento mal\u00fd proud, prot\u00e9kaj\u00edc\u00ed p\u0159es stejn\u00fd odpor 100 k\u2126 do b\u00e1ze, k sepnut\u00ed tranzistoru, neboli ke zmen\u0161en\u00ed jeho odporu mezi kolektorem a emitorem natolik, \u017ee se LED rozsv\u00edt\u00ed. Zkuste nyn\u00ed odpojit dr\u00e1t ze zd\u00ed\u0159ky b\u00e1ze tranzistoru. LED zhasne, nebo\u0165 jste odpojili proud do b\u00e1ze a tranzistor se rozepnul. Chytn\u011bte nyn\u00ed odpojen\u00fd vodi\u010d prsty za odizolovan\u00fd konec a druhou rukou se dotkn\u011bte zd\u00ed\u0159ky b\u00e1ze tranzistoru, LED se rozsv\u00edt\u00ed, pokud ne, m\u00edrn\u011b si navlh\u010dete prsty a znovu se dotkn\u011bte. T\u011blo toti\u017e p\u0159edstavuje rovn\u011b\u017e elektrick\u00fd odpor, kter\u00fdm projde proud posta\u010duj\u00edc\u00ed k sepnut\u00ed tranzistoru v na\u0161em zapojen\u00ed.</p> <p>Pokud budete s tranzistorem experimentovat, dbejte, aby do b\u00e1ze tekl proud v\u017edy p\u0159es odpor. Stejn\u011b jako u LED byste velk\u00fdm proudem p\u0159\u00edmo z baterie tranzistor zni\u010dili.</p> <p></p>"},{"location":"electron/electron-lesson-3/#11-jednoduchy-tranzistorovy-zesilovac","title":"11. Jednoduch\u00fd tranzistorov\u00fd zesilova\u010d","text":"<p>V mnoha p\u0159\u00edpadech, kdy je vstupn\u00ed sign\u00e1l, kter\u00fd m\u00e1me k dispozici, p\u0159\u00edli\u0161 mal\u00fd na to, aby sepnul tranzistor, je nutno propojit n\u011bkolik tranzistor\u016f za sebou, aby se celkov\u00e9 zes\u00edlen\u00ed obvodu zv\u00fd\u0161ilo. Jednoduch\u00fd zesilova\u010d- tzv. Darlingtonovo zapojen\u00ed je na sch\u00e9matu. Po zapojen\u00ed se dotkn\u011bte zd\u00ed\u0159ky b\u00e1ze T a p\u0159ibli\u017ete se k n\u011bjak\u00e9mu (i vypnut\u00e9mu) elektrick\u00e9mu spot\u0159ebi\u010di nebo kabelu. LED se rozsv\u00edt\u00ed, p\u0159esto\u017ee do b\u00e1ze T zd\u00e1nliv\u011b nete\u010de \u017e\u00e1dn\u00fd proud. Va\u0161e t\u011blo nyn\u00ed p\u016fsob\u00ed jako ant\u00e9na pro okoln\u00ed elektromagnetick\u00e9 pole a dotekem prstu p\u0159ivedete do b\u00e1ze T proud velikosti deseti-tis\u00edcin mA, kter\u00fd ov\u0161em sta\u010d\u00ed k pootev\u0159en\u00ed tranzistoru T. Zes\u00edlen\u00fd proud vych\u00e1zej\u00edc\u00ed z emitoru T a vstupuj\u00edc\u00ed do b\u00e1ze T sta\u010d\u00ed k sepnut\u00ed tranzistoru T a rozsv\u00edcen\u00ed \u010derven\u00e9 LED. P\u0159esto\u017ee se zd\u00e1, \u017ee p\u0159i doteku LED sv\u00edt\u00ed trval\u00fdm jasem, vlastn\u011b blik\u00e1, a to v rytmu zm\u011bn okoln\u00edho elektromagnetick\u00e9 pole, kter\u00e9 m\u011bn\u00ed svoji intenzitu stejn\u011b jako nap\u011bt\u00ed a proud v elektrick\u00e9 s\u00edti 50 kr\u00e1t za sekundu. Zm\u011bny jsou ov\u0161em na lidsk\u00e9 oko p\u0159\u00edli\u0161 rychl\u00e9, a proto vn\u00edm\u00e1me jas LED jako st\u00e1l\u00fd. Pokud chcete toto blik\u00e1n\u00ed vid\u011bt, pohybujte panelem zlehka k\u00fdvav\u011b do stran od kabelu a sledujte LED.</p> <p></p>"},{"location":"electron/electron-lesson-3/#12-tranzistorovy-oscilator","title":"12. Tranzistorov\u00fd oscil\u00e1tor","text":"<p>Zapojte obvod podle sch\u00e9matu. Obvod je u\u017e pon\u011bkud slo\u017eit\u011bj\u0161\u00ed, proto prove\u010fte d\u00edl\u010d\u00ed kontrolu po zapojen\u00ed \u010d\u00e1sti oscil\u00e1toru, abyste sn\u00ed\u017eili riziko chyby v celkov\u00e9m zapojen\u00ed a kontrolu po zapojen\u00ed cel\u00e9ho obvodu. Pokud jste si jisti, m\u016f\u017eete p\u0159ipojit baterii. Stiskn\u011bte tla\u010d\u00edtko a za\u010dnou blikat LED.</p> <p>Co se v tomto za\u0159\u00edzen\u00ed odehr\u00e1v\u00e1? Po stisku tla\u010d\u00edtka se p\u0159ivede nap\u00e1jen\u00ed k obvodu, jeho\u017e sou\u010d\u00e1stky a zp\u016fsob zapojen\u00ed je zvolen tak, aby v n\u011bm do\u0161lo ke kmit\u016fm, neboli aby se samo\u010dinn\u011b st\u0159\u00eddav\u011b sp\u00ednaly jeden nebo druh\u00fd tranzistor. Na kolektor T je s odporem R 560 \u2126 p\u0159ipojena LED, tak\u017ee kdy\u017e je pr\u00e1v\u011b sepnut tento tranzistor, te\u010de do kolektoru proud p\u0159es odpor R a LED a ta se rozsv\u00edt\u00ed. V okam\u017eiku, kdy se T vypne, p\u0159estane do jeho kolektoru t\u00e9ci proud a LED zhasne.</p> <p></p>"},{"location":"electron/electron-lesson-3/#13-jednoduche-poplasne-zarizeni","title":"13. Jednoduch\u00e9 popla\u0161n\u00e9 za\u0159\u00edzen\u00ed","text":"<p>Zapojte obvod podle sch\u00e9matu. Je dobr\u00e9 prov\u00e9st d\u00edl\u010d\u00ed kontrolu po zapojen\u00ed \u010d\u00e1sti oscil\u00e1toru, kdy nen\u00ed na panelu je\u0161t\u011b mnoho vodi\u010d\u016f, sn\u00ed\u017e\u00ed se tak riziko chyby v celkov\u00e9m zapojen\u00ed. M\u00e1te-li obvod cel\u00fd zapojen a zkontrolov\u00e1n, p\u0159ipojte baterii a p\u0159epn\u011bte p\u0159ep\u00edna\u010d do polohy naho\u0159e. Pokud jsou konce popla\u0161n\u00fdch vodi\u010d\u016f rozpojeny, rozsv\u00edt\u00ed se \u010derven\u00e1 LED. Pokud konce popla\u0161n\u00fdch vodi\u010d\u016f spoj\u00edme, LED zhasne. Nyn\u00ed m\u016f\u017eete konce popla\u0161n\u00fdch vodi\u010d\u016f \u0161ikovn\u011b p\u0159ilepit t\u0159eba na \u0161upl\u00edk u stolu, kter\u00fd chcete hl\u00eddat nebo zat\u00ed\u017eit kontakty hl\u00eddan\u00fdmi p\u0159edm\u011btem a \u010dekat a\u017e se n\u011bkdo \"chyt\u00ed\".</p> <p></p>"},{"location":"electronicDie/","title":"O co jde?","text":"<p>Elektronick\u00e1 hrac\u00ed kostka je jednoduch\u00e9 elektronick\u00e9 za\u0159\u00edzen\u00ed, kter\u00e9 v\u00e1m nahrad\u00ed klasickou hrac\u00ed kostku. Ovl\u00e1d\u00e1 se jedn\u00edm tla\u010d\u00edtkem na desce, kter\u00fdm m\u016f\u017eete zapnout losov\u00e1n\u00ed \u010d\u00edsla. Jakmile v\u00e1m jedno \u010d\u00edslo padne, bude na kostce sv\u00edtit a\u017e do dal\u0161\u00edho hodu.</p> <p>Tak sm\u011ble h\u00e1zejte a nebojte se zahr\u00e1t si spolu t\u0159eba kostky.</p> <p> </p>"},{"location":"electronicDie/manual/","title":"N\u00e1vod","text":""},{"location":"electronicDie/manual/#potrebny-material","title":"Pot\u0159ebn\u00fd materi\u00e1l","text":"<ul> <li>Deska plo\u0161n\u00fdch spoj\u016f</li> <li>3 Diody 1N4148</li> <li>3 rezistory 10k\u03a9</li> <li>3 rezistory 4.7M\u03a9</li> <li>5 rezistor\u016f 1k\u03a9</li> <li>4 kondez\u00e1tory 100nF</li> <li>1 tranzistor BC547B</li> <li>1 tranzistor BC557B</li> <li>7 LED</li> <li>tla\u010d\u00edtko</li> <li>2 integrovan\u00e9 obvody (CD4029N a NE555N)</li> <li>podlo\u017eku pod USB konektor</li> </ul>"},{"location":"electronicDie/manual/#navod-na-slozeni","title":"N\u00e1vod na slo\u017een\u00ed","text":"<p> 1. P\u0159iprav\u00edme si desku pro hrac\u00ed kostku</p> <p> 2. Osad\u00edme 3 diody 1N4148 (D1, D2, D3). Pozor na polaritu! Je t\u0159eba m\u00edt \u010dern\u00fd prou\u017eek na diod\u011b na stejn\u00e9 stran\u011b, jako je nazna\u010deno b\u00edl\u00fdm prou\u017ekem na desce.</p> <p> 3. Osad\u00edme 3 rezistory 10 k\u03a9 (R1, R2, R3) </p> <p> 4. Osad\u00edme 3 rezistory 4.7 M\u03a9 (R4, R5, R6)</p> <p> 5. Osad\u00edme 5 rezistor\u016f 1 k\u03a9 (R7, R8, R9, R10, R11)</p> <p> 6. Osad\u00edme 4 kondenz\u00e1tory 100 nF (C1, C2, C3, C4)</p> <p> 7. Osad\u00edme 1 tranzistor BC547B (T1) Je t\u0159eba dodr\u017eet orientaci dle nazna\u010den\u00ed na desce!</p> <p> 8. Osad\u00edme 1 tranzistor BC557B (T2) Op\u011bt je t\u0159eba dodr\u017eet oto\u010den\u00ed dle n\u00e1kresu na desce!</p> <p> 9. Osad\u00edme 7 \u010derven\u00fdch LEDek (LED1, LED2, LED3, LED4, LED5, LED6, LED7) Je t\u0159eba dodr\u017eet oto\u010den\u00ed dle n\u00e1kresu na desce!</p> <p> 10. Osad\u00edme tla\u010d\u00edtko (S1)</p> <p> 11. Osad\u00edme 2 integrovan\u00e9 obvody (IC1, IC2) Je t\u0159eba dodr\u017eet orientaci! Kole\u010dko na pouzd\u0159e obvodu mus\u00ed b\u00fdt v lev\u00e9m horn\u00edm rohu na desce! Pokud si nejste oto\u010den\u00edm jisti, zeptejte se rad\u011bji lektora.</p> <p> 12. P\u0159iprav\u00edme si vte\u0159inov\u00e9 lepidlo a podlo\u017eku pod USB konektor</p> <p> 13. Podlep\u00edme USB konektor podle fotky</p> <p> 14. Dokon\u010den\u00e1 hrac\u00ed kostka</p> <p> 15. Sv\u00edt\u00edc\u00ed hrac\u00ed kostka zapojen\u00e1 v powerbance</p>"},{"location":"elks/","title":"ELKS (ESP Learning Kit Starter)","text":"<p>ELKS neboli ESP Learning Kit Starter je v\u00fdvojov\u00e1 deska pro mikrokontrol\u00e9r ESP32-S3. Jedn\u00e1 se o vzd\u011bl\u00e1vac\u00ed n\u00e1stroj pro v\u00fduku elektroniky a z\u00e1klad\u016f programov\u00e1n\u00ed. Kity pou\u017e\u00edv\u00e1me v krou\u017ec\u00edch pro za\u010d\u00e1te\u010dn\u00edky i pokro\u010dil\u00e9.</p> <p>Desku lze nap\u00e1jet pomoc\u00ed USB kabelu nebo power banky p\u0159ipojen\u00e9 p\u0159\u00edmo k desce.</p> <p></p>"},{"location":"elks/#funkce","title":"Funkce:","text":"<ul> <li>LED</li> <li>Tla\u010d\u00edtka</li> <li>Potenciometry</li> <li>Piezo</li> <li>Servo v\u00fdstupy</li> <li>Digilent PMOD konektory</li> <li>Konektor \u03bc\u0160up</li> </ul>"},{"location":"elks/#programovani","title":"Programov\u00e1n\u00ed:","text":"<p>Letos budeme v\u00fdvojov\u00e9 desky programovat na platform\u011b ESP32-S3. Pro programov\u00e1n\u00ed budeme pou\u017e\u00edvat jazyk TypeScript, v kombinaci s knihovnou Jaculus.</p>"},{"location":"elks/#prehled-pinu","title":"P\u0159ehled pin\u016f","text":""},{"location":"elks/#tlacitka","title":"Tla\u010d\u00edtka","text":"<ul> <li><code>SW0</code> - 18</li> <li><code>SW1</code> - 16</li> <li><code>SW2</code> - 42</li> </ul>"},{"location":"elks/#led","title":"LED","text":"<ul> <li><code>LED-G</code> - 17</li> <li><code>LED-Y</code> - 15</li> <li><code>LED-R</code> - 45</li> <li><code>LED-B</code> - 46</li> </ul>"},{"location":"elks/#potenciometry","title":"Potenciometry","text":"<ul> <li><code>POT0</code> - 2</li> <li><code>POT1</code> - 1</li> </ul>"},{"location":"elks/#bzucak","title":"Bzu\u010d\u00e1k","text":"<ul> <li><code>BUZZER-PIN-A</code> - 0</li> <li><code>BUZZER-PIN-B</code> - 3</li> </ul>"},{"location":"elks/#servo","title":"Servo","text":"<ul> <li><code>SER0</code> - 35</li> <li><code>SER1</code> - 40</li> </ul>"},{"location":"elks/#i-led-esp32","title":"I-LED-ESP32","text":"<ul> <li><code>I-LED-ESP</code> - 48</li> </ul>"},{"location":"elks/#i-led-external","title":"I-LED-EXTERNAL","text":"<ul> <li><code>I-LED-EXT</code> - 21</li> </ul>"},{"location":"elks/#sup","title":"\u03bc\u0160up","text":"<ul> <li><code>SCL</code> - 47</li> <li><code>SDA</code> - 48</li> </ul>"},{"location":"elks/#pmod_0","title":"PMOD_0","text":""},{"location":"elks/#1","title":"1","text":"<ul> <li><code>41</code></li> <li><code>37</code></li> <li><code>39</code></li> <li><code>5</code></li> </ul>"},{"location":"elks/#2","title":"2","text":"<ul> <li><code>36</code></li> <li><code>38</code></li> <li><code>4</code></li> <li><code>6</code></li> </ul>"},{"location":"elks/#pmod_1","title":"PMOD_1","text":""},{"location":"elks/#1_1","title":"1","text":"<ul> <li><code>7</code></li> <li><code>12</code></li> <li><code>13</code></li> <li><code>14</code></li> </ul>"},{"location":"elks/#2_1","title":"2","text":"<ul> <li><code>10</code></li> <li><code>9</code></li> <li><code>8</code></li> <li><code>11</code></li> </ul>"},{"location":"elks/faq/","title":"\u010casto kladen\u00e9 dotazy","text":""},{"location":"elks/faq/#do-ktereho-micro-usb-mam-pripojit-kabel","title":"Do kter\u00e9ho micro USB m\u00e1m p\u0159ipojit kabel?","text":"<ul> <li>Pou\u017e\u00edvej konektor ozna\u010den\u00fd <code>USB</code> (ten druh\u00fd v\u00e1m nemus\u00ed fungovat).</li> <li> Pro\u010d ten druh\u00fd nefunguje? Konektor s ozna\u010den\u00edm <code>UART</code> je p\u0159ipojen\u00fd skrze p\u0159evodn\u00edk. Musel by b\u00fdt nainstalovan\u00fd na po\u010d\u00edta\u010di ovlada\u010d, aby tento port fungoval. </li> </ul>"},{"location":"elks/faq/#jak-komunikovat-se-zarizenim","title":"Jak komunikovat se za\u0159\u00edzen\u00edm?","text":"<ul> <li>V lev\u00e9m spodn\u00edm rohu vyberte COM port (<code>Select COM Port</code>).</li> <li>Pot\u00e9 je mo\u017en\u00e9 spustit monitor (<code>Monitor</code>) skrze ikonku v lev\u00e9m spodn\u00edm rohu.</li> <li>N\u00e1sledn\u011b se v\u00e1m otev\u0159e termin\u00e1l, ve kter\u00e9m vid\u00edte v\u00fdstup ze za\u0159\u00edzen\u00ed.</li> </ul>"},{"location":"elks/faq/#jak-se-odpojit-od-zarizeni","title":"Jak se odpojit od za\u0159\u00edzen\u00ed?","text":"<ul> <li>Pomoc\u00ed klaves Ctrl+C se odpoj\u00edte z monitoru.</li> </ul>"},{"location":"elks/faq/#jak-zjistit-verzi-firmwaru-v-jaculu","title":"Jak zjistit verzi firmwaru v Jaculu?","text":"<ul> <li>P\u0159ipojte Jacula k po\u010d\u00edta\u010di.</li> <li>Pomoc\u00ed Ctrl+Shift+P se v\u00e1m otev\u0159e okno pro zad\u00e1v\u00e1n\u00ed p\u0159\u00edkaz\u016f.</li> <li>Zadejte <code>Jaculus: Get firmware version</code>.</li> <li>V\u00fdsledek by se m\u011bl objevit v termin\u00e1lu.</li> </ul>"},{"location":"elks/faq/#_1","title":"\u010casto kladen\u00e9 dotazy","text":""},{"location":"elks/grafo/","title":"Multiplayer Grafo","text":"<p>Masivn\u011b multiplayerov\u00e1 koopera\u010dn\u00ed hra! Co zvl\u00e1dne\u0161 nakreslit ty?</p> <p>Na adrese http://grafo.lan b\u011b\u017e\u00ed str\u00e1nka, na kterou m\u016f\u017ee kdokoliv kreslit pomoc\u00ed radia:</p> <p>Pro\u010d to nefunguje doma?</p> <p>Str\u00e1nka je dostupn\u00e1 pouze na Robotick\u00e9m t\u00e1bo\u0159e!</p> Dom\u00e1c\u00ed verze <p>Pokud chcete hr\u00e1t doma, m\u016f\u017eete si str\u00e1nku spustit lok\u00e1ln\u011b. Zdrojov\u00e9 k\u00f3dy najdete na GitHubu zde.</p> <p></p>"},{"location":"elks/grafo/#protokol","title":"Protokol","text":"<p>Pou\u017eijte radio skupinu 12.</p> <p>Pou\u017eijte <code>radio.sendString</code> na pos\u00edl\u00e1n\u00ed p\u0159\u00edkaz\u016f.</p>"},{"location":"elks/grafo/#prikazy","title":"P\u0159\u00edkazy","text":"<ul> <li>Nastav rychlost pohybu ukazatele: <code>s &lt;rychlost x&gt; &lt;rychlost y&gt;</code><ul> <li>Rychlost je v rozmez\u00ed od -100 do 100</li> <li>P\u0159\u00edklad: <code>radio.sendString(\"s 100 50\")</code></li> </ul> </li> <li>Nastav barvu kreslen\u00ed: <code>c &lt;hex HTML barva&gt;</code><ul> <li>Barva se specifikuje jako v HTML/CSS, tedy <code>#FF0000</code> pro \u010dervenou apod. Vyb\u00edr\u00e1tko</li> <li>P\u0159\u00edklad: <code>radio.sendString(\"c #EC1CFF\")</code></li> </ul> </li> <li>Nastav tlou\u0161\u0165ku \u010d\u00e1ry: <code>t &lt;tloustka&gt;</code><ul> <li>Tlou\u0161\u0165ka je v rozmez\u00ed od 1 do 10.</li> <li>P\u0159\u00edklad: <code>radio.sendString(\"t 4\")</code></li> </ul> </li> <li>Reset ukazatele: <code>reset</code><ul> <li>Resetuje pozici, tlou\u0161\u0165ku a barvu ukazatele.</li> <li>P\u0159\u00edklad: <code>radio.sendString(\"reset\")</code></li> </ul> </li> </ul>"},{"location":"elks/lekce1/","title":"Lekce 1 - prvn\u00ed program","text":"<p>V t\u00e9to lekci si p\u0159edstav\u00edme Jaculus, nainstalujeme si programovac\u00ed prost\u0159ed\u00ed a spust\u00edme prvn\u00ed program.</p>"},{"location":"elks/lekce1/#instalace","title":"Instalace","text":"<p>Pro pr\u00e1ci s Jaculem je nutn\u00e9 nainstalovat n\u011bkolik program\u016f.</p>"},{"location":"elks/lekce1/#nodejs","title":"Node.js","text":"<p>Node.js je program, kter\u00fd n\u00e1m umo\u017en\u00ed nahr\u00e1vat k\u00f3d do Jacula a komunikovat s n\u00edm.</p> <ol> <li>St\u00e1hneme si Node.js (nejnov\u011bj\u0161\u00ed stabiln\u00ed verzi - LTS)</li> <li>Nainstalujeme jej dle v\u00fdchoz\u00edho nastaven\u00ed (nen\u00ed pot\u0159eba nic m\u011bnit).</li> </ol>"},{"location":"elks/lekce1/#visual-studio-code","title":"Visual Studio Code","text":"<p>Visual Studio Code je programovac\u00ed prost\u0159ed\u00ed, kter\u00e9 n\u00e1m umo\u017en\u00ed ps\u00e1t k\u00f3d a s roz\u0161\u00ed\u0159en\u00edm n\u00e1m dovol\u00ed nahr\u00e1vat k\u00f3d do za\u0159\u00edzen\u00ed.</p> <ol> <li>St\u00e1hneme si Visual Studio Code (nejnov\u011bj\u0161\u00ed stabiln\u00ed verzi)</li> <li>Nainstalujeme jej dle v\u00fdchoz\u00edho nastaven\u00ed (nen\u00ed pot\u0159eba nic m\u011bnit).</li> </ol>"},{"location":"elks/lekce1/#jaculus","title":"Jaculus","text":"<p>Jaculus je program, kter\u00fd n\u00e1m umo\u017en\u00ed nahr\u00e1vat k\u00f3d do Jacula a komunikovat s n\u00edm.</p> <ol> <li>Po instalaci Nodu restartujeme aplikaci Visual Studio Code.</li> <li>V horn\u00edm menu VSCode vyberte z\u00e1lo\u017eku <code>Terminal</code> a zvol\u00edme <code>New Terminal</code>.</li> <li> <p>Do termin\u00e1lu zad\u00e1me p\u0159\u00edkaz vypsan\u00fd n\u00ed\u017ee. Na <code>Linuxu</code> bude nejsp\u00ed\u0161e pot\u0159eba <code>sudo</code> pr\u00e1va.</p> <pre><code>npm install -g jaculus-tools\n</code></pre> H\u00e1\u017ee mi to chybu <p>Pro aplikov\u00e1n\u00ed v\u0161ech zm\u011bn je nutn\u00fd restart VSCode. Pokud se v\u00e1m neda\u0159\u00ed nainstalovat Jaculus, zkuste nejd\u0159\u00edve restartovat VSCode.</p> </li> <li> <p>Pro otestov\u00e1n\u00ed instalace zad\u00e1me do termin\u00e1lu p\u0159\u00edkaz:</p> <pre><code>npx jac\n</code></pre> <p>Program by m\u011bl vypsat n\u00e1pov\u011bdu.</p> Uk\u00e1zka n\u00e1pov\u011bdy <pre><code>Usage: jac &lt;command&gt;\n\nTools for controlling devices running Jaculus\n\nCommands:\nhelp           Print help for given command\nlist-ports     List available serial ports\nserial-socket  Tunnel a serial port over a TCP socket\ninstall        Install Jaculus to device\nbuild          Compile target file\nflash          Flash code to device (replace contents of ./code)\npull           Download a file/directory from device\nls             List files in a directory\nread           Read a file from device\nwrite          Write a file to device\nrm             Delete a file on device\nmkdir          Create a directory on device\nrmdir          Delete a directory on device\nupload         Upload a file/directory to device\nstart          Start a program\nstop           Stop a program\nstatus         Get status of device\nversion        Get version of device firmware\nmonitor        Monitor program output\n\nGlobal options:\n--log-level   Set log level (default: info)\n--help        Print this help message\n--port        Serial port to use (default: first available)\n--baudrate    Baudrate to use (default: 921600)\n--socket      host:port to use\n</code></pre> </li> </ol>"},{"location":"elks/lekce1/#jaculus-vscode-rozsireni","title":"Jaculus VSCode Roz\u0161\u00ed\u0159en\u00ed","text":"<p>Roz\u0161\u00ed\u0159en\u00ed pro VSCode n\u00e1m umo\u017en\u00ed jednodu\u0161e nahr\u00e1vat k\u00f3d do Jacula pomoc\u00ed ikonek a kl\u00e1vesov\u00fdch zkratek.</p> <ol> <li>V lev\u00e9m menu VSCode vyberte z\u00e1lo\u017eku <code>Extensions</code> a vyhledejte <code>Jaculus</code>.     </li> <li>Zvolte <code>Install</code>.</li> <li>Po otev\u0159en\u00ed projektu by se v\u00e1m ve spodn\u00ed li\u0161t\u011b m\u011bly objevit oran\u017eov\u00e9 ikonky Jacula.     </li> </ol> Pou\u017e\u00edv\u00e1m Windows a nem\u016f\u017eu se p\u0159ipojit p\u0159es USB UART <p>Pokud se v\u00e1m neda\u0159\u00ed p\u0159ipojit na USB UART port, je nutn\u00e9 doinstalovat spr\u00e1vn\u00e9 drivery.</p> <ol> <li>St\u00e1hn\u011bte si driver pro v\u00e1\u0161 opera\u010dn\u00ed syst\u00e9m. Naleznete jej v z\u00e1lo\u017ece <code>Downloads -&gt; Software -&gt; CP210x Universal Windows Driver</code>.</li> <li>Rozbalte ZIP soubor a pot\u00e9 prav\u00fdm tla\u010d\u00edtkem klikn\u011bte na <code>silabser.inf</code> a vyberte <code>Install</code>.</li> <li>Vyzkou\u0161ejte, zda se v\u00e1m poda\u0159ilo p\u0159ipojit Jaculus. (mo\u017en\u00e1 budete muset restartovat po\u010d\u00edta\u010d).</li> </ol>"},{"location":"elks/lekce1/#prvni-projekt","title":"Prvn\u00ed projekt","text":"<p>Zde si vyzkou\u0161\u00edme vytvo\u0159it prvn\u00ed projekt a nahr\u00e1t jej do ELKS.</p> <p>St\u00e1hnout ZIP s prvn\u00edm projektem</p> <ol> <li>V prvn\u00edm kroku si na po\u010d\u00edta\u010di nachyst\u00e1me slo\u017eku <code>RoboCamp-2023</code> do kter\u00e9 si budeme ukl\u00e1dat ve\u0161ker\u00e9 projekty.</li> <li>D\u00e1le si st\u00e1hneme zip soubor s prvn\u00edm projektem.</li> <li>Pot\u00e9 si jej rozbal\u00edme do vytvo\u0159en\u00e9 slo\u017eky k t\u00e1boru.</li> <li>Spust\u00edme VSCode a pomoc\u00ed z\u00e1lo\u017eky <code>File</code> -&gt; <code>Open Folder</code> vybereme slo\u017eku s projektem.</li> <li> <p>V lev\u00e9m spodn\u00edm rohu vybereme <code>Select COM port</code> pro v\u00fdb\u011br portu, na kter\u00e9m je ELKS p\u0159ipojen\u00fd. Pot\u00e9 se n\u00e1pis zm\u011bn\u00ed na vybran\u00fd port.</p> M\u00e1m v\u00edce port\u016f <p>Pokud se v\u00e1m v nab\u00eddce zobraz\u00ed v\u00edce port\u016f, odpojte ELKS a zjis\u0165e, kter\u00fd port zmizel. Po p\u0159ipojen\u00ed ELKS tento port vyberte.</p> <ol> <li>D\u00e1le zvol\u00edme <code>Monitor</code>, ten slou\u017e\u00ed pro komunikaci se za\u0159\u00edzen\u00edm.</li> </ol> </li> </ol>"},{"location":"elks/lekce1/#nahrani-programu","title":"Nahr\u00e1n\u00ed programu","text":"<p>Pokud n\u00e1m v\u0161em funguje p\u0159ipojen\u00ed na <code>Monitor</code> a b\u011b\u017e\u00ed n\u00e1m komunikace se za\u0159\u00edzen\u00edm, m\u016f\u017eeme si tam zkusit nahr\u00e1t n\u00e1\u0161 prvn\u00ed k\u00f3d.</p> <ol> <li>Ve VSCodu m\u00e1me otev\u0159en\u00fd prvn\u00ed projekt. V lev\u00e9m <code>Exploreru</code> (<code>Pr\u016fzkumn\u00edku</code>) vybereme soubor ze  <code>src</code> -&gt; <code>index.ts</code>. V n\u011bm vid\u00edme n\u00e1\u0161 prvn\u00ed program.</li> <li>Pot\u00e9 zvol\u00edme <code>Build and Flash</code> pro nahr\u00e1n\u00ed programu do za\u0159\u00edzen\u00ed.     </li> <li>Stejn\u011b jako v p\u0159edchoz\u00ed \u010d\u00e1sti kliknem na tla\u010d\u00edtko <code>Monitor</code>. M\u011bli bychom vid\u011bt v\u00fdstup z programu.     <pre><code>$ jac monitor --port /dev/tty.usbmodem213101\nConnecting to serial at /dev/tty.usbmodem213101 at 921600 bauds... Connected.\n\nRobotick\u00fd t\u00e1bor 2023, zdrav\u00ed Jirka V\u00e1cha!\nRobotick\u00fd t\u00e1bor 2023, zdrav\u00ed Jirka V\u00e1cha!\n</code></pre></li> <li>Pro ukon\u010den\u00ed termin\u00e1lu, do n\u011bj klikneme a stiskneme Ctrl+C.</li> </ol>"},{"location":"elks/lekce1/#uprava-programu","title":"\u00daprava programu","text":"<p>Pokud n\u00e1m funguje nahr\u00e1v\u00e1n\u00ed k\u00f3du, m\u016f\u017eeme se na n\u011bj pod\u00edvat a zkusit jej upravit. Ve zdrojov\u00e9m k\u00f3du jsou koment\u00e1\u0159e (<code>// tohle je koment\u00e1\u0159</code>), kter\u00e9 n\u00e1m popisuj\u00ed, co kter\u00fd \u0159\u00e1dek d\u011bl\u00e1.</p> <ol> <li>Prostudujeme si zdrojov\u00fd k\u00f3d.</li> <li> <p>Uprav\u00edme si pozdrav na sv\u00e9 jm\u00e9no.</p> \u0158e\u0161en\u00ed <pre><code>...\nconsole.log(\"Robotick\u00fd t\u00e1bor 2023, zdrav\u00ed Franta Flinta!\");  // tady jsem zm\u011bnil sv\u00e9 jm\u00e9no\n...\n</code></pre> </li> <li> <p>Pokus\u00edme se zm\u011bnit rychlost vypisov\u00e1n\u00ed.</p> \u0158e\u0161en\u00ed <pre><code>...\nsetInterval(() =&gt; { /* moj kod */ }, 500); // \u010das opakov\u00e1n\u00ed se ud\u00e1v\u00e1 v milisekund\u00e1ch (1000 ms je 1 sekunda)\n...\n</code></pre> </li> <li> <p>Uprav\u00edme si barvu.</p> \u0158e\u0161en\u00ed <pre><code>...\nledStrip.set(0, colors.red); // nastav\u00ed barvu LED na ESP32 na \u010dervenou\n...\n</code></pre> <p>Barvy:</p> <ul> <li><code>red</code></li> <li><code>orange</code></li> <li><code>yellow</code></li> <li><code>green</code></li> <li><code>light_blue</code></li> <li><code>blue</code></li> <li><code>purple</code></li> <li><code>pink</code></li> <li><code>white</code></li> <li><code>off</code></li> </ul> </li> <li> <p>Uprav\u00edmes si \u010d\u00edseln\u00e9 prom\u011bnn\u00e9 na pojmenovan\u00e9 konstanty.</p> Pojmenovan\u00e9 konstanty <pre><code>...\nconst LED_PIN = 48;\nconst LED_COUNT = 1;\n\nconst ledStrip = new SmartLed(LED_PIN, LED_COUNT, LED_WS2812);  // p\u0159ipoj\u00ed p\u00e1sek na pin 48, s 1 ledkou a typem WS2812\n...\n</code></pre> </li> </ol>"},{"location":"elks/lekce10/","title":"Lekce 10 - servo","text":"<p>Na ELKS jsou k dispozici dva jednoduch\u00e9 servo porty na lev\u00e9 stran\u011b ELSKu.</p> <ul> <li><code>SER0</code> - pin 35</li> <li><code>SER1</code> - pin 40</li> </ul>"},{"location":"elks/lekce10/#zacatek","title":"Za\u010d\u00e1tek","text":"<p>Abychom mohli pou\u017e\u00edvat servo mus\u00edme ho z\u00edskat p\u0159\u00edkazem <code>const servo = new Servo(...)</code>, a do z\u00e1vorky nap\u00ed\u0161eme \u010d\u00edslo PINu, timer (nastavte ho na 1) a kan\u00e1l (nastavte ho na 3)</p> <pre><code>import { Servo } from \"./libs/servo.js\"\n\nconst SERVO_PIN = 35;\nconst servo = new Servo(SERVO_PIN, 1, 3);\n</code></pre> <p>Na nastaven\u00ed pozice serva pou\u017eijte funkci <code>servo.write()</code> a do z\u00e1vorek zadejte \u010d\u00edslo od 0 do 1023. <pre><code>servo.write(0);    // 0\u00b0\nservo.write(512);  // 90\u00b0\nservo.write(1023); // 180\u00b0\n</code></pre></p>"},{"location":"elks/lekce10/#dve-serva","title":"Dv\u011b serva","text":"<p>Pokud chceme pou\u017e\u00edvat dv\u011b serva, mus\u00edme zm\u011bn\u00edt kan\u00e1l v konfiguraci druh\u00e9ho serva.</p> <pre><code>import { Servo } from \"./libs/servo.js\"\n\nconst SERVO_PIN_0 = 35;\nconst SERVO_PIN_1 = 40;\nconst servo_0 = new Servo(SERVO_PIN_0, 1, 3);\nconst servo_1 = new Servo(SERVO_PIN_1, 1, 4);\n</code></pre>"},{"location":"elks/lekce10/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Vytvo\u0159te program kter\u00fd bude \u010d\u00edst data z joysticku a zapisovat je do dvou serv.</p> \u0158e\u0161en\u00ed <pre><code>import * as adc from \"adc\";\nimport { Servo } from \"./libs/servo.js\"\n\nconst SERVO_PIN_0 = 35;\nconst SERVO_PIN_1 = 40;\nconst POT_PIN_X = 9;\nconst POT_PIN_Y = 10;\n\nadc.configure(POT_PIN_X);\nadc.configure(POT_PIN_Y);\n\nconst servo_0 = new Servo(SERVO_PIN_0, 1, 3);\nconst servo_1 = new Servo(SERVO_PIN_1, 1, 4);\n\nsetInterval(() =&gt; {\nservo_0.write(adc.read(POT_PIN_X));\nservo_0.write(adc.read(POT_PIN_Y));\n}, 25);\n</code></pre>"},{"location":"elks/lekce2/","title":"Lekce 2 - RGB LED + tla\u010d\u00edtko + ud\u00e1losti","text":"<p>V t\u00e9to lekci si uk\u00e1\u017eeme ovl\u00e1d\u00e1n\u00ed RGB LED um\u00edst\u011bn\u00e9 na ESP32 a pr\u00e1ci s ud\u00e1lostmi \u0159\u00edzen\u00fdmi tla\u010d\u00edtkem nebo \u010dasem.</p> <p>Jeliko\u017e je TypeScript (JavaScript) imperativn\u00ed, vykon\u00e1v\u00e1j\u00ed se p\u0159\u00edkazy v takov\u00e9m po\u0159ad\u00ed, v jak\u00e9m jsou zaps\u00e1ny.</p> <p>St\u00e1hnout ZIP s pr\u00e1zdn\u00fdm projektem</p>"},{"location":"elks/lekce2/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Nejd\u0159\u00edve si zopakujeme p\u0159edchoz\u00ed lekci, a rozsv\u00edt\u00edme RGB LED na ESP32 (<code>GPIO 48</code>) jednou barvou (nap\u0159\u00edklad \u010dervenou).</p> <p>Na za\u010d\u00e1tku tohoto \u00fakolu si st\u00e1hneme nov\u00fd zip soubor obsahuj\u00edc\u00ed pr\u00e1zdn\u00fd projekt. Po sta\u017een\u00ed slo\u017eku rozbal\u00edme a otev\u0159eme ve Visual Studio Code. V souboru <code>index.ts</code> jsou p\u0159ipraveny <code>import</code> p\u0159\u00edkazy: ty n\u00e1m umo\u017en\u00ed vyu\u017e\u00edvat funkcionalitu z r\u016fzn\u00fdch soubor\u016f, nap\u0159. jednodu\u0161e ovl\u00e1dat LEDku, nebo vyu\u017e\u00edvat nadefinovan\u00e9 barvy.</p> <p>Abychom mohli LED u procesoru ovl\u00e1dat, mus\u00edme ji z\u00edskat p\u0159\u00edkazem <code>const led = new SmartLed(...)</code>, a do z\u00e1vorky nap\u00ed\u0161eme \u010d\u00edslo PINu, po\u010det LED sv\u011btel (zat\u00edm je to 1), a typ sv\u011btla: <code>LED_WS2812</code>. Barvu LED nastav\u00edme pomoc\u00ed <code>led.set(0, colors.n\u011bjak\u00e1_barva)</code> a zobraz\u00edme pomoc\u00ed <code>led.show()</code>.</p> \u0158e\u0161en\u00ed <pre><code>import { SmartLed, LED_WS2812 } from \"smartled\";\nimport * as colors from \"./libs/colors.js\"\n\nconst LED_PIN = 48;\nconst LED_COUNT = 1;\n\nconst ledStrip = new SmartLed(LED_PIN, LED_COUNT, LED_WS2812);  // p\u0159ipoj\u00ed p\u00e1sek na pin 48, s 1 ledkou a typem WS2812\n\nledStrip.set(0, colors.red); // nastav\u00ed barvu nult\u00e9 LED na \u010dervenou (RGB 255 0 0)\nledStrip.show(); // zobraz\u00ed nastaven\u00ed na LED\n</code></pre>"},{"location":"elks/lekce2/#co-je-to-udalost-v-programovani","title":"Co je to ud\u00e1lost v programov\u00e1n\u00ed?","text":"<p>Ud\u00e1lost, kter\u00e1 je programem rozpozn\u00e1v\u00e1na (nap\u0159\u00edklad stisknut\u00ed nebo pu\u0161t\u011bn\u00ed tla\u010d\u00edtka nebo uplynut\u00ed n\u011bjak\u00e9ho \u010dasu). Po zaznamen\u00e1n\u00ed ud\u00e1losti se vykon\u00e1 k\u00f3d, kter\u00fd je k n\u00ed p\u0159i\u0159azen.</p> <p>S ud\u00e1lost\u00ed \u0159\u00edzenou \u010dasem u\u017e jsme se setkali: pomoc\u00ed <code>setInterval</code> um\u00edme vyvolat n\u011bco, co se opakuje ka\u017ed\u00fdch <code>X</code> milisekund.</p> <p>Ud\u00e1losti \u0159\u00edzen\u00e9 stiskem tla\u010d\u00edtka m\u016f\u017eeme ovl\u00e1dat pomoc\u00ed p\u0159ilo\u017een\u00e9 knihovny <code>gpio</code>. <code>GPIO</code> je jednoduch\u00e1 elektronick\u00e1 konstrukce, kter\u00e1 n\u00e1m umo\u017e\u0148uje pos\u00edlat nebo p\u0159ij\u00edmat bit informace, a na z\u00e1klad\u011b toho m\u011bnit chov\u00e1n\u00ed na\u0161eho programu.</p> <p>Abychom mohli p\u0159ij\u00edmat sign\u00e1l ze stisknut\u00ed tla\u010d\u00edtka, nejd\u0159\u00edve mus\u00edme nastavit vybran\u00fd pin jako vstupn\u00ed. To ud\u011bl\u00e1me p\u0159\u00edkazem <code>gpio.pinMode(PIN, gpio.PinMode.INPUT)</code>, kde PIN je \u010d\u00edslo pinu (najdeme na str\u00e1nce), a druh\u00fd argument je re\u017eim. Pokud bychom cht\u011bli nap\u0159. pou\u017e\u00edt LEDky p\u0159\u00edmo na desce, chceme dan\u00e9 piny pou\u017e\u00edt jako v\u00fdstupn\u00ed, tedy <code>gpio.PinMode.OUTPUT</code>.</p> <p>Jakmile m\u00e1me nastaven\u00e9 vstupn\u00ed tla\u010d\u00edtko, m\u016f\u017eeme na n\u011bm pozorovat ud\u00e1losti pomoc\u00ed <code>gpio.on()</code>. Reakci na stisknut\u00ed tla\u010d\u00edtka vyvol\u00e1me argumentem <code>\"falling\"</code>, reakci na pu\u0161t\u011bn\u00ed <code>\"rising\"</code>. K\u00f3d, kter\u00fd p\u0159i stisku tla\u010d\u00edtka n\u011bco vykon\u00e1, tedy m\u016f\u017ee vypadat takto:</p> <pre><code>const BTN_PIN = n\u011bjak\u00e9 \u010d\u00edslo;\ngpio.pinMode(BTN_PIN, gpio.PinMode.INPUT); gpio.on(\"falling\", BTN_PIN, () =&gt; {\n// n\u011bco ud\u011blej\n});\n</code></pre>"},{"location":"elks/lekce2/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Pomoc\u00ed ud\u00e1lost\u00ed rozsv\u00edt\u00edme p\u0159i stisknut\u00ed tla\u010d\u00edtka (GPIO 0) RGB LED na ESP32 (<code>GPIO 48</code>) a p\u0159i pu\u0161t\u011bn\u00ed ho op\u011bt zhasneme.</p> \u0158e\u0161en\u00ed <pre><code>import * as gpio from \"gpio\";\nimport { SmartLed, LED_WS2812 } from \"smartled\";\nimport * as colors from \"./libs/colors.js\"\n\nconst LED_PIN = 48;\nconst LED_COUNT = 1;\nconst BTN_LEFT = 18;\n\nconst ledStrip = new SmartLed(LED_PIN, LED_COUNT, LED_WS2812);  // p\u0159ipoj\u00ed p\u00e1sek na pin 48, s 1 ledkou a typem WS2812\n\ngpio.pinMode(BTN_LEFT, gpio.PinMode.INPUT); // nastav\u00ed pin 18 jako vstup\n\ngpio.on(\"falling\", BTN_LEFT, () =&gt; { // ud\u00e1lost, kter\u00e1 prob\u011bhne p\u0159i stisknut\u00ed tla\u010d\u00edtka p\u0159ipojen\u00e9ho na pin 0\nledStrip.set(0, colors.red); // nastav\u00ed barvu nult\u00e9 LED na \u010dervenou (RGB 255 0 0)\nledStrip.show(); // zobraz\u00ed nastaven\u00ed na LED\n});\n\ngpio.on(\"rising\", BTN_PIN, () =&gt; { // ud\u00e1lost, kter\u00e1 prob\u011bhne p\u0159i pu\u0161t\u011bn\u00ed tla\u010d\u00edtka p\u0159ipojen\u00e9ho na pin 0\nledStrip.set(0, colors.off); // nastav\u00ed nultou LED na zhasnutou (RGB 0 0 0)\nledStrip.show(); // zobraz\u00ed nastaven\u00ed na LED\n});\n</code></pre>"},{"location":"elks/lekce2/#zadani-c","title":"Zad\u00e1n\u00ed C","text":"<p>Dvakr\u00e1t za sekundu vyp\u00ed\u0161eme stav zm\u00e1\u010dknut\u00ed tla\u010d\u00edtka (0 nebo 1). Opakov\u00e1n\u00ed dos\u00e1hneme pomoc\u00ed <code>setInterval()</code>. Stav dan\u00e9ho tla\u010d\u00edtka z\u00edsk\u00e1me pomoc\u00ed <code>gpio.read(\u010d\u00edslo pinu)</code>.</p> \u0158e\u0161en\u00ed <pre><code>import * as gpio from \"gpio\";\n\nconst LBTN_PIN = 18;\n\ngpio.pinMode(BTN_PIN, gpio.PinMode.INPUT); // nastav\u00ed pin nula jako vstup\n\nsetInterval(() =&gt; { // pravideln\u011b vyvol\u00e1v\u00e1 ud\u00e1lost\nconsole.log(gpio.read(BTN_PIN)); // na\u010dte a vyp\u00ed\u0161e stav tla\u010d\u00edtka p\u0159ipojen\u00e9ho na pin 0\n}, 500); // \u010das opakov\u00e1n\u00ed se ud\u00e1v\u00e1 v milisekund\u00e1ch (500 ms je 0,5 sekundy)\n</code></pre>"},{"location":"elks/lekce2/#zadani-vystupniho-ukolu-v1","title":"Zad\u00e1n\u00ed v\u00fdstupn\u00edho \u00fakolu V1","text":"<p>P\u0159i stisknut\u00ed tla\u010d\u00edtka (GPIO 0) vyp\u00ed\u0161eme pozdrav.</p>"},{"location":"elks/lekce2/#zadani-vystupniho-ukolu-v2","title":"Zad\u00e1n\u00ed v\u00fdstupn\u00edho \u00fakolu V2","text":"<p>P\u0159i stisknut\u00ed tla\u010d\u00edtka (GPIO 0) rozsv\u00edt\u00edme RGB LED na ESP32 (<code>GPIO 48</code>) jednou barvou a p\u0159i pu\u0161t\u011bn\u00ed barvu zm\u011bn\u00edme na jinou.</p>"},{"location":"elks/lekce3/","title":"Lekce 3 - prom\u011bnn\u00e9 a podm\u00ednky","text":"<p>V imperativn\u00edm programov\u00e1n\u00ed si dr\u017e\u00edme stav pomoc\u00ed prom\u011bnn\u00fdch. Prom\u011bnn\u00e9 jsou pojmenovan\u00e9 hodnoty, kter\u00e9 maj\u00ed n\u011bjakou hodnotu, m\u016f\u017eeme je m\u011bnit, a opakovan\u011b pou\u017e\u00edvat v r\u016fzn\u00fdch \u010d\u00e1stech k\u00f3du.</p> <p>Prom\u011bnn\u00e1 m\u00e1 sv\u016fj typ, kter\u00fd ur\u010duje, jak\u00e9 hodnoty m\u016f\u017ee prom\u011bnn\u00e1 m\u00edt. Prom\u011bnnou vytvo\u0159\u00edme pomoc\u00ed kl\u00ed\u010dov\u00e9ho slova <code>let</code>. Ka\u017ed\u00fd jazyk m\u00e1 n\u011bkolik z\u00e1kladn\u00edch typ\u016f, zat\u00edm n\u00e1m budou sta\u010dit dva:</p> <ul> <li>number: z\u00e1kladn\u00ed \u010d\u00edseln\u00fd typ, m\u016f\u017ee nab\u00fdvat nap\u0159. hodnot: <code>1</code>, <code>2</code>, <code>10</code>, <code>-5</code>, <code>0.5</code></li> <li>boolean: z\u00e1kladn\u00ed pravdivostn\u00ed typ, kter\u00fd nab\u00fdv\u00e1 hodnot <code>true</code> a <code>false</code></li> </ul> <p>Hodnoty p\u0159i\u0159azujeme do prom\u011bnn\u00fdch pomoc\u00ed oper\u00e1toru <code>=</code>. P\u0159\u00edklad pou\u017eit\u00ed:</p> <pre><code>let first : number; // Vytvo\u0159\u00ed prom\u011bnnou se jm\u00e9nem first, a typem number\nfirst = 10; // P\u0159i\u0159ad\u00ed do prom\u011bnn\u00e9 hodnotu 10\nfirst = 15; // Zm\u011bn\u00ed hodnotu prom\u011bnn\u00e9 na 15\nlet second : number = 20; // Vytv\u00e1\u0159en\u00ed a p\u0159i\u0159azen\u00ed m\u016f\u017eeme zkombinovat\nlet truth : boolean = true; // Vytvo\u0159\u00ed prom\u011bnnou typu bool, kter\u00e1 reprezentuje pravdu\n</code></pre> <p>S prom\u011bnn\u00fdmi stejn\u011b jako s \u010d\u00edsly m\u016f\u017eeme prov\u00e1d\u011bt z\u00e1kladn\u00ed operace.</p> <pre><code>let a : number = 10;\nlet b : number = 5;\nlet c : number = a + b;\nlet d : number = b - a;\n</code></pre> <p>Abychom na z\u00e1klad\u011b hodnot prom\u011bnn\u00fdch mohli m\u011bnit chov\u00e1n\u00ed programu, pot\u0159ebujeme podm\u00ednky.</p> <p>Podm\u00ednka <code>if</code> na z\u00e1klad\u011b pravdivostn\u00ed hodnoty rozhodne, zda se vykon\u00e1 dan\u00fd kus k\u00f3du. Pokud prom\u011bnn\u00e1 <code>condition</code> je typu bool, potom po vykon\u00e1n\u00ed n\u00e1sleduj\u00edc\u00edho k\u00f3du: <pre><code>let result : number = 10;\nif (condition) {\nresult = 20;\n}\n</code></pre></p> <p>Pokud <code>condition</code> m\u00e1 hodnotu <code>true</code>, bude v <code>result</code> 20, pokud m\u00e1 <code>condition</code> hodnotu <code>false</code>, bude v <code>result</code> 10.</p> <p>Rovn\u011b\u017e se m\u016f\u017eeme v podm\u00ednce rozhodovat na z\u00e1klad\u011b porovn\u00e1v\u00e1n\u00ed \u010d\u00edseln\u00fdch hodnot.</p> <pre><code>let first : number;\nlet second : number;\n...\nif (first == second) {\n...\n}\n</code></pre> <p>To, zda jsou dv\u011b \u010d\u00edsla stejn\u00e1, zjist\u00edme pomoc\u00ed <code>==</code>, zda je jedno v\u011bt\u0161\u00ed ne\u017e druh\u00e9 zji\u0161\u0165ujeme pomoc\u00ed <code>&lt;</code> a <code>&gt;</code>, p\u0159\u00edpadn\u011b <code>&lt;=</code> a <code>&gt;=</code>.</p> <p>Pokud se chceme zachovat dv\u011bma r\u016fzn\u00fdmi zp\u016fsoby, pou\u017eijeme konstrukci</p> <pre><code>if (podm\u00ednka) {\na\n} else {\nb\n}\n</code></pre> <p>Pokud podm\u00ednka plat\u00ed, vykon\u00e1 se k\u00f3d <code>a</code>, pokud neplat\u00ed, vykon\u00e1 se k\u00f3d <code>b</code>.</p> <p>Za pou\u017eit\u00ed prom\u011bnn\u00fdch a podm\u00ednek rozsv\u00edt\u00edme sv\u011btlo na na\u0161\u00ed desce r\u016fzn\u00fdmi barvami.</p> <p>Barevn\u00e9 sv\u011btlo vytv\u00e1\u0159\u00edme ze t\u0159\u00ed z\u00e1kladn\u00edch barev: \u010derven\u00e1 (RED), zelen\u00e1 (GREEN), a modr\u00e1 (BLUE). Tyto barvy m\u00edch\u00e1me v r\u016fzn\u00fdch pom\u011brech od 0 do 255, a vytv\u00e1\u0159\u00edme tak r\u016fzn\u00e9 barvy:</p> <ul> <li>Prvn\u00ed hodnota (r) n\u00e1m d\u00e1v\u00e1 mno\u017estv\u00ed \u010derven\u00e9 (tedy nap\u0159. hodnoty 100, 0, 0) rozsv\u00edt\u00ed LEDku \u010derven\u011b</li> <li>Druh\u00e1 (g) d\u00e1v\u00e1 mno\u017estv\u00ed zelen\u00e9</li> <li>T\u0159et\u00ed (b) d\u00e1v\u00e1 mno\u017estv\u00ed modr\u00e9</li> </ul> <p>Ve v\u00fdchoz\u00edm stavu je LED vypnut\u00e1 (hodnoty <code>(0, 0, 0)</code>), a nejsiln\u011bj\u0161\u00ed b\u00edl\u00e9 sv\u011btlo z\u00edsk\u00e1me pou\u017eit\u00edm v\u0161ech barev na maximum (hodnoty <code>(255, 255, 255)</code>).</p> <p>Druhou variantou je pou\u017eit\u00ed p\u0159eddefinovan\u00fdch barev, kter\u00e9 jsou v souboru <code>colors.ts</code>. P\u0159\u00edklad pou\u017eit\u00ed obou variant:</p> <pre><code>ledStrip.set(0, colors.off); // Vypne LEDku pomoc\u00ed p\u0159eddefinovan\u00e9 barvy\nledStrip.set(0, {r: 0, g: 0, b: 0}); // Vypne LEDku pomoc\u00ed vlastn\u00ed barvy\n\nledStrip.set(0, colors.green); // Rozsv\u00edt\u00ed LEDku zelen\u011b pomoc\u00ed p\u0159eddefinovan\u00e9 barvy\nledStrip.set(0, {r: 0, g: 255, b: 0}); // Rozsv\u00edt\u00ed LEDku zelen\u011b pomoc\u00ed vlastn\u00ed barvy\n</code></pre> <p>Pro tuto lekci si st\u00e1hneme zip, nebo nav\u00e1\u017eeme na p\u0159edchoz\u00ed cvi\u010den\u00ed. Sv\u00e9 \u0159e\u0161en\u00ed budeme ps\u00e1t do souboru <code>index.ts</code>.</p>"},{"location":"elks/lekce3/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Pomoc\u00ed jedn\u00e9 prom\u011bnn\u00e9 se stavem a podm\u00ednky ka\u017edou sekundu bu\u010f rozsv\u00edt\u00edme, nebo zhasneme LED na desce.</p> \u0158e\u0161en\u00ed <pre><code>import { SmartLed, LED_WS2812 } from \"smartled\";\nimport * as colors from \"./libs/colors.js\"\n\nconst LED_PIN = 48;\nconst LED_COUNT = 1;\n\nconst ledStrip = new SmartLed(LED_PIN, LED_COUNT, LED_WS2812);  // p\u0159ipoj\u00ed p\u00e1sek na pin 48, s 1 ledkou a typem WS2812\n\nlet on: boolean = false; // LED je vypnut\u00e1\n\nsetInterval(() =&gt; {\nif (on) { // Pokud je LED zapnut\u00e1\nledStrip.set(0, colors.off); // Vypneme LED\nledStrip.show(); // Zobraz\u00edme zm\u011bny\non = false;\n} else {\nledStrip.set(0, colors.green); // Rozsv\u00edt\u00edme LED zelenou barvou\nledStrip.show(); // Zobraz\u00edme zm\u011bny\non = true\n}\n}, 1000);\n</code></pre>"},{"location":"elks/lekce3/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Pomoc\u00ed funkce <code>colors.rainbow</code> budeme proch\u00e1zet duhu. Jde o funkci, kter\u00e1 dostane \u010d\u00edslo od 0 do 360, a na z\u00e1klad\u011b toho vr\u00e1t\u00ed barvu na barevn\u00e9m spektru. V dan\u00e9m intervalu (nap\u0159. 100 ms) budeme postupn\u011b zvy\u0161ovat \u010d\u00edslo a nastavovat barvu LEDky na <code>colors.rainbow(cislo)</code>. Pokud na\u0161e \u010d\u00edslo p\u0159es\u00e1hne hodnotu <code>360</code>, mus\u00edme ho op\u011bt nastavit na <code>0</code>.</p> \u0158e\u0161en\u00ed <pre><code>import { SmartLed, LED_WS2812 } from \"smartled\";\nimport * as colors from \"./libs/colors.js\"\n\nconst LED_PIN = 48;\nconst LED_COUNT = 1;\n\nconst ledStrip = new SmartLed(LED_PIN, LED_COUNT, LED_WS2812);  // p\u0159ipoj\u00ed p\u00e1sek na pin 48, s 1 ledkou a typem WS2812\n\nlet shade = 0; // Dr\u017e\u00edme si stav s aktu\u00e1ln\u00edm odst\u00ednem\n\nsetInterval(() =&gt; {\nledStrip.set(0, colors.rainbow(shade)); // Nastav\u00edme LED na aktu\u00e1ln\u00ed odst\u00edn\nledStrip.show(); // Zobraz\u00edme vybranou barvu\nshade = shade + 1; // Zvedneme odst\u00edn (lze i shade += 1)\nif (shade &gt; 360) {\nshade = 0;\n}\n}, 100);\n</code></pre>"},{"location":"elks/lekce3/#zadani-c","title":"Zad\u00e1n\u00ed C","text":"<p>Tentokr\u00e1t budeme reagovat na stisk tla\u010d\u00edtka. Do desky si zapoj\u00edme p\u00e1sku 8 inteligentn\u00edch ledek, a vybranou barvou je budeme rozsv\u011bcet. Po stisku tla\u010d\u00edtka zhasneme aktu\u00e1ln\u00ed LEDku, a rozsv\u00edt\u00edme tu dal\u0161\u00ed. Pokud p\u0159i stisku tla\u010d\u00edtka sv\u00edt\u00ed posledn\u00ed LED, zhasneme ji, a rozsv\u00edt\u00edme op\u011bt prvn\u00ed LED.</p> \u0158e\u0161en\u00ed <pre><code>import { SmartLed, Rgb, LED_WS2812 } from \"smartled\";\nimport * as colors from \"./libs/colors.js\"\nimport * as gpio from \"gpio\";\n\nconst LED_PIN = 21;\nconst LED_COUNT = 8;\n\nconst BTN_PIN = 18;\n\ngpio.pinMode(BTN_PIN, gpio.PinMode.INPUT_PULLUP); // Nastav\u00edme tla\u010d\u00edtko\nconst ledStrip = new SmartLed(LED_PIN, LED_COUNT, LED_WS2812);  // p\u0159ipoj\u00ed p\u00e1sek na pin 21, s 8 ledkami a typem WS2812\n\nlet index : number = 0;\nlet color : Rgb = colors.light_blue; // Vybereme si barvu\nledStrip.set(0, color); // Nastav\u00edme LED na aktu\u00e1ln\u00ed odst\u00edn\nledStrip.show(); // Zobraz\u00edme zm\u011bny\n\ngpio.on(\"falling\", BTN_PIN, () =&gt; {\nledStrip.set(index, colors.off); // Vypneme p\u0159edchoz\u00ed LED\nindex = index + 1; // Zvedneme index (lze i index += 1)\nif(index &gt; 7){ // Pokud jsme mimo rozsah p\u00e1sku, vr\u00e1t\u00edme se na za\u010d\u00e1tek\nindex = 0;\n}\nledStrip.set(index, color); // Nastav\u00edme aktu\u00e1ln\u00ed LED\nledStrip.show();  // Zobraz\u00edme zm\u011bny\n});\n</code></pre>"},{"location":"elks/lekce3/#vystupni-ukol-v1","title":"V\u00fdstupn\u00ed \u00fakol V1","text":"<p>Knightrider: sv\u00edt\u00edc\u00ed LED \"b\u011bh\u00e1\" s danou rychlost\u00ed od za\u010d\u00e1tku do konce p\u00e1sky. Jakmile doraz\u00ed na konec, zm\u011bn\u00ed sm\u011br, a posouv\u00e1 se opa\u010dn\u00fdm sm\u011brem.</p> <p>V na\u0161em p\u0159\u00edpad\u011b bude sta\u010dit, kdy\u017e se bude pohybovat pouze jedna LEDka.</p> <p></p> <p>Pro dobrovoln\u00edky</p> <ul> <li> <p>Jezdec m\u016f\u017ee p\u0159i b\u011bhu m\u011bnit barvy (nap\u0159. pomoc\u00ed funkce <code>rainbow</code>)</p> </li> <li> <p>Jezdec m\u016f\u017ee zanech\u00e1vat stopu: barva nezmiz\u00ed hned, ale a\u017e s odstupem. Barva m\u016f\u017ee \"mizet\" postupn\u011b: intenzita stopy se \u010dasem sni\u017euje.</p> </li> </ul>"},{"location":"elks/lekce4/","title":"Lekce 4 - cykly","text":"<p>V t\u00e9to lekci si p\u0159edstav\u00edme cykly, co\u017e je n\u00e1stroj kter\u00fd n\u00e1m umo\u017e\u0148uje opakovat k\u00f3d podle n\u011bjak\u00e9ho pravidla. M\u00e1me prim\u00e1rn\u011b dva typy cykl\u016f:</p> <ul> <li><code>for</code> pro p\u0159\u00edpad kdy v\u00edme kolikr\u00e1t se cyklus m\u00e1 opakovat</li> <li><code>while</code> pro p\u0159\u00edpad kdy nezn\u00e1me po\u010det opakov\u00e1n\u00ed</li> </ul>"},{"location":"elks/lekce4/#cyklus-for","title":"Cyklus for","text":"<p>Cyklus <code>for</code>  m\u016f\u017eeme napsat takto: <pre><code>for(let i: number = 0; i &lt; 3; i++) {\n// opakovan\u00fd k\u00f3d\n}\n</code></pre> Do kulat\u00fdch z\u00e1vorek p\u00ed\u0161eme t\u0159i v\u011bci:</p> <ul> <li>\u0159\u00edd\u00edc\u00ed prom\u011bnnou s jej\u00ed v\u00fdchoz\u00ed hodnotou</li> <li>v\u00fdraz kter\u00fd ur\u010duje po\u010det opakov\u00e1n\u00ed</li> <li>nakonec jednoduchou operaci kter\u00e1 se provede p\u0159i ka\u017ed\u00e9m pr\u016fchodu cyklem jako posledn\u00ed operace</li> </ul> <p>Tedy zakl\u00e1d\u00e1me prom\u011bnnou <code>i</code> s v\u00fdchoz\u00ed hodnotou <code>0</code>, n\u00e1sledn\u011b definujeme v\u00fdraz <code>i &lt; 3</code> a na konci cyklu zv\u00fd\u0161\u00edme <code>i</code> o jedna. P\u0159i prvn\u00edm pr\u016fchodu bude tedy <code>i = 0</code> p\u0159i druh\u00e9m <code>i = 1</code> a p\u0159i t\u0159et\u00edm <code>i = 2</code> p\u0159i dal\u0161\u00edm zvy\u0161ov\u00e1n\u00ed by platilo <code>i = 3</code> tam ale u\u017e nebude pravdiv\u00fd v\u00fdraz <code>i &lt; 3</code> a cyklus se tedy ukon\u010d\u00ed. Do slo\u017een\u00fdch z\u00e1vorek p\u00ed\u0161eme vykon\u00e1van\u00fd k\u00f3d.</p> <p>Kostru na tento \u00fakol najdete zde.</p>"},{"location":"elks/lekce4/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Ve spojen\u00ed se znalostmi z minul\u00fdch lekc\u00ed napi\u0161te program, kter\u00fd po stisku tla\u010d\u00edtka vyp\u00ed\u0161e \u010d\u00edsla 0 a\u017e 9 (pomoc\u00ed <code>console.log(cislo)</code>), v\u017edy na samostatn\u00fd \u0159\u00e1dek. Kod napi\u0161te tak aby bylo jednoduch\u00e9 ho upravit na v\u00fdpis jak\u00e9hokoli jin\u00e9ho intervalu, nap\u0159. 0 a\u017e 99 nebo 10 a\u017e 19.</p> \u0158e\u0161en\u00ed <pre><code>import * as gpio from \"gpio\";\n\nconst BTN_PIN = 18;\n\ngpio.pinMode(BTN_PIN, gpio.PinMode.INPUT_PULLUP); // nastav\u00ed pin nula jako vstup\n\ngpio.on(\"falling\", BTN_PIN, () =&gt; { // ud\u00e1lost, kter\u00e1 prob\u011bhne p\u0159i stisknut\u00ed tla\u010d\u00edtka p\u0159ipojen\u00e9ho na pin 0\nconsole.log(\"Stisknuto, za\u010d\u00edn\u00e1me po\u010d\u00edtat\");\nfor (let i: number = 0; i &lt; 9; i++) { // vyp\u00ed\u0161eme \u010d\u00edsla od 0 do 8\nconsole.log(i);\n}\nconsole.log(\"\"); // odd\u011bl\u00edme jednotliv\u00e9 stisky\n});\n</code></pre>"},{"location":"elks/lekce4/#cyklus-while","title":"Cyklus while","text":"<p>Pokud nev\u00edme kolikr\u00e1t se m\u00e1 cyklus opakovat pou\u017eijeme m\u00edsto cyklu <code>for</code> cyklus <code>while</code>.</p> <p>Do kulat\u00fdch z\u00e1vorek te\u010f p\u00ed\u0161eme jen v\u00fdraz kter\u00fd ur\u010duje jestli se cyklus vykon\u00e1 znovu nebo ne. K\u00f3d, kter\u00fd se m\u00e1 vykon\u00e1vat, dokud plat\u00ed podm\u00ednka, vypad\u00e1 takto: <pre><code>while (condition - podm\u00ednka) {\n// n\u00e1\u0161 k\u00f3d\n}\n</code></pre></p>"},{"location":"elks/lekce4/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Nyn\u00ed napi\u0161te k\u00f3d kter\u00fd do konzole vyp\u00ed\u0161e \u010dtverec slo\u017een\u00fd z hv\u011bzdi\u010dek (znaku <code>*</code>), nap\u0159. takto: <pre><code>***\n***\n***\n</code></pre> Velikost tohoto \u010dtverce ur\u010dete pomoc\u00ed konstanty jej\u00ed\u017e hodnota ud\u00e1v\u00e1 po\u010det \u0159\u00e1dku a sloupc\u016f.</p> <p>Pokud nechceme za vypsan\u00fdmi znaky nov\u00fd \u0159\u00e1dek, m\u00edsto zn\u00e1m\u00e9ho <code>console.log()</code> pou\u017eijeme <code>stdout.write</code></p> \u0158e\u0161en\u00ed <pre><code>import { stdout } from \"stdio\";\n\nconst SQUARE_SIZE: number = 3; // velikost \u010dtverce\n\nconsole.log(\"Vykresl\u00edme \u010dtverec o velikosti \" + SQUARE_SIZE + \"x\" + SQUARE_SIZE);\n\nfor(let row: number = 0; row &lt; SQUARE_SIZE; row++){ // projdeme v\u0161echny \u0159\u00e1dky\nfor(let col: number = 0; col &lt; SQUARE_SIZE; col++){ // projdeme v\u0161echny sloupce\nstdout.write(\"*\"); // vyp\u00ed\u0161eme hv\u011bzdi\u010dku\n}\nstdout.write(\"\\n\"); // p\u0159esuneme se na dal\u0161\u00ed \u0159\u00e1dek\n}\n</code></pre>"},{"location":"elks/lekce4/#zadani-vystupniho-ukolu-v1","title":"Zad\u00e1n\u00ed v\u00fdstupn\u00edho \u00fakolu V1","text":"<p>Napi\u0161te kod kter\u00fd kter\u00fd vyp\u00ed\u0161e \u010d\u00edsla od 9 do 0. N\u00e1pov\u011bda, zad\u00e1n\u00ed je velmi podobn\u00e9 jako zad\u00e1n\u00ed A jen jdou \u010d\u00edsla sestupn\u011b nam\u00edsto vzestupn\u011b.</p>"},{"location":"elks/lekce4/#zadani-vystupniho-ukolu-v2","title":"Zad\u00e1n\u00ed v\u00fdstupn\u00edho \u00fakolu V2","text":"<p>Stejn\u011b jako v zad\u00e1n\u00ed B budeme do konzole vykreslovat geometrick\u00fd obrazec, akor\u00e1t tentokr\u00e1t to bude troj\u00faheln\u00edk jako tenhle:</p> <pre><code>*\n**\n***\n****\n*****\n</code></pre> <p>Pro dobrovoln\u00edky</p> <ul> <li>Zkuste kreslit r\u016fzn\u00e9 tvary, a r\u016fzn\u00e9 typy: nap\u0159. trojuheln\u00edk, kter\u00fd je uvnit\u0159 dut\u00fd, strome\u010dek, nebo kruh</li> </ul>"},{"location":"elks/lekce5/","title":"Lekce 5 - funkce","text":""},{"location":"elks/lekce5/#funkce-co-to-je","title":"Funkce - Co to je?","text":"<p>Funkce je \u010d\u00e1st programu, kterou m\u016f\u017eeme volat (spou\u0161t\u011bt) jin\u00fdmi \u010d\u00e1stmi programu. Rozd\u011blen\u00ed programu na funkce ho v\u00fdrazn\u011b zp\u0159ehled\u0148uje a umo\u017e\u0148uje n\u00e1m opakovan\u011b pou\u017e\u00edvat jeden kus k\u00f3du.</p>"},{"location":"elks/lekce5/#vytvoreni-a-zavolani-funkce","title":"Vytvo\u0159en\u00ed a zavol\u00e1n\u00ed funkce","text":"<pre><code>function sayHello(): void {\nconsole.log(\"Ahoj\");\nconsole.log(\"z funkce\");\n}\n</code></pre> <p>Funkci zavol\u00e1me n\u00e1sleduj\u00edc\u00edm zp\u016fsobem: <pre><code>sayHello();\n</code></pre></p> K\u00f3d n\u00e1m vyp\u00ed\u0161e: <pre><code>info:    Device: Starting machine\nAhoj\nz funkce\n</code></pre>"},{"location":"elks/lekce5/#predavani-argumentu","title":"P\u0159ed\u00e1v\u00e1n\u00ed argument\u016f","text":"<p>Funkc\u00edm m\u016f\u017eeme p\u0159i vol\u00e1n\u00ed p\u0159ed\u00e1vat argumenty. Argumenty funkce p\u00ed\u0161eme p\u0159i vytv\u00e1\u0159en\u00ed funkce do z\u00e1vorky. Pokud je argument\u016f v\u00edce, odd\u011blujeme je \u010d\u00e1rkou. Parametry je taky pot\u0159eba vhodn\u011b otypovat. <pre><code>function getSquare(num: number): void {\nlet square: number = num * num;\nconsole.log(\"Druh\u00e1 mocnina zadan\u00e9ho \u010d\u00edsla je:\");\nconsole.log(square);\n}\n</code></pre></p> <p>Funckci zavol\u00e1me n\u00e1sleduj\u00edc\u00edm zp\u016fsobem: <pre><code>getSquare(5);\n</code></pre></p> To by n\u00e1m m\u011blo vypsat: <pre><code>info:    Device: Starting machine\nDruh\u00e1 mocnina zadan\u00e9ho \u010d\u00edsla je:\n25\n</code></pre>"},{"location":"elks/lekce5/#vraceni-hodnot","title":"Vracen\u00ed hodnot","text":"<p>Z funkce je mo\u017en\u00e9 vr\u00e1tit hodnotu. M\u016f\u017eeme tak jednoduch\u00fdm zp\u016fsobem pojmenovat slo\u017eit\u011bj\u0161\u00ed v\u00fdpo\u010dty a prov\u00e1d\u011bt je opakovan\u011b. Hodnoty vrac\u00edme pomoc\u00ed kl\u00ed\u010dov\u00e9ho slova <code>return</code>. Podobn\u011b jako v p\u0159\u00edpad\u011b parametr\u016f mus\u00edme specifikovat typ vracen\u00e9 hodnoty. Pokud funkce \u017e\u00e1dnou hodnotu nevrac\u00ed, n\u00e1vratov\u00fd typ je <code>void</code>, tedy \"pr\u00e1zdn\u00e1 hodnota\".</p> <pre><code>function getAverage(num1: number, num2: number): number {\nlet sum: number = num1 + num2; // Sou\u010det dvou \u010d\u00edsel\nreturn sum / 2; // Vr\u00e1t\u00edme pr\u016fm\u011br dvou \u010d\u00edsel jako n\u00e1vratovou hodnotu\n}\n</code></pre> <p>Funkci pou\u017eijeme n\u00e1sleduj\u00edc\u00edm zp\u016fsobem: <pre><code>let average: number = getAverage(5, 10);\n\nconsole.log(\"Pr\u016fm\u011br je:\");\nconsole.log(average);\n</code></pre></p> V\u00fdstup programu <pre><code>info:    Device: Starting machine\nPr\u016fm\u011br je:\n7.5\n</code></pre> Nedosa\u017eiteln\u00fd k\u00f3d <p>Pou\u017eit\u00edm kl\u00ed\u010dov\u00e9ho slova <code>return</code> ukon\u010d\u00edme vykon\u00e1v\u00e1n\u00ed sou\u010dasn\u00e9 funkce a vr\u00e1t\u00edme se zp\u00e1tky do funkce kter\u00e1 ji zavolala. Z toho vypl\u00fdv\u00e1, \u017ee to co nap\u00ed\u0161eme za <code>return</code> se ji\u017e nikdy nevykon\u00e1. <pre><code>function getSquare(num: number): number { // Druh\u00e1 mocnina\nreturn num * num;\nconsole.log(\"Toto se nikdy nevyp\u00ed\u0161e\");\n}\n</code></pre></p> <p>Samoz\u0159ejm\u011b m\u016f\u017eeme funkce kombinovat, vz\u00e1jemn\u011b volat z jin\u00fdch funkc\u00ed, a v\u00fdsledky ukl\u00e1dat do prom\u011bnn\u00fdch.  M\u016f\u017eeme tak kombinovat funkcionalitu d\u0159\u00edve napsan\u00fdch funkc\u00ed a zp\u0159ehlednit celkov\u00fd k\u00f3d.</p> <pre><code>function getSquare(num: number): number { // Druh\u00e1 mocnina\nreturn num * num;\n}\n\nfunction sumSquares(first: number, second: number) { // Se\u010dti druh\u00e9 mocniny\nlet result = getSquare(first) + getSquare(second);\nreturn result;\n}\n</code></pre>"},{"location":"elks/lekce5/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Pod\u00edv\u00e1me se op\u011bt na p\u0159\u00edklady z p\u0159edchoz\u00edch lekc\u00ed, a zobecn\u00edme \u010d\u00e1sti k\u00f3du tak, aby \u0161ly jednodu\u0161e m\u011bnit. V prvn\u00edm p\u0159\u00edkladu vytvo\u0159\u00edme funkci <code>count</code>, kter\u00e1 jako argumenty vezme dv\u011b \u010d\u00edsla, a postupn\u011b vyp\u00ed\u0161e \u010d\u00edsla od prvn\u00edho argumentu, po druh\u00fd. tedy zavol\u00e1n\u00ed funkce <code>count(1, 5)</code> vyp\u00ed\u0161e</p> <pre><code>1\n2\n3\n4\n5\n</code></pre> \u0158e\u0161en\u00ed <pre><code>function count(lower: number, upper: number): void {\nfor (let counter = lower; counter &lt;= upper; counter++) {\nconsole.log(counter);\n}\n}\n</code></pre>"},{"location":"elks/lekce5/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>M\u00edsto vypisov\u00e1n\u00ed \u010dtvere\u010dku si chceme napsat funkci, kter\u00e1 na v\u00fdstup nakresl\u00ed obd\u00e9ln\u00edk libovoln\u00e9 velikosti. Nap\u00ed\u0161eme tedy funkci <code>drawRectangle</code> (nakresli obd\u00e9ln\u00edk), kter\u00e1 vezme argument \u0161\u00ed\u0159ky a d\u00e9lky, a pot\u00e9 vyp\u00ed\u0161e obd\u00e9ln\u00edk dan\u00e9 velikosti.</p> \u0158e\u0161en\u00ed <pre><code>import { stdout } from \"stdio\";\n\nfunction drawRectangle(cols: number, rows: number): void { // funkce, kter\u00e1 vykresl\u00ed obd\u00e9ln\u00edk (po\u010det sloupc\u016f, po\u010det \u0159\u00e1dk\u016f)\nfor (let row: number = 0; row &lt; rows; row++) { // projdeme v\u0161echny \u0159\u00e1dky\nfor (let col: number = 0; col &lt; cols; col++) { // projdeme v\u0161echny sloupce\nstdout.write(\"*\"); // vyp\u00ed\u0161eme hv\u011bzdi\u010dku\n}\nstdout.write(\"\\n\"); // p\u0159esuneme se na dal\u0161\u00ed \u0159\u00e1dek\n}\n}\n\ndrawRectangle(5, 2); // vyp\u00ed\u0161e obd\u00e9ln\u00edk o velikosti \u0161\u00ed\u0159ky 5 a d\u00e9lky 2\n</code></pre>"},{"location":"elks/lekce5/#zadani-c","title":"Zad\u00e1n\u00ed C","text":"<p>Nakonec se vr\u00e1t\u00edme k LED p\u00e1sk\u016fm, kter\u00e9 te\u010f m\u016f\u017eeme rozsv\u00edtit jednou funkc\u00ed vybran\u00fdm zp\u016fsobem. Nap\u00ed\u0161eme funkci, kter\u00e1 na vstupu vezme barvu a \u010d\u00edslo LED, kterou chceme rozsv\u00edtit.</p> \u0158e\u0161en\u00ed <pre><code>import { SmartLed, LED_WS2812 } from \"smartled\";\nimport * as colors from \"./libs/colors.js\"\n\nconst LED_PIN = 21;\nconst LED_COUNT = 8;\n\nconst ledStrip = new SmartLed(LED_PIN, LED_COUNT, LED_WS2812);  // p\u0159ipoj\u00ed p\u00e1sek na pin 21, s 8 ledkami a typem WS2812\n\nfunction setLed(color: colors.Rgb, index: number){\nledStrip.set(index, color); // Nastav\u00edme LED na aktu\u00e1ln\u00ed odst\u00edn\nledStrip.show(); // Zobraz\u00edme vybranou barvu\n}\n</code></pre>"},{"location":"elks/lekce5/#zadani-vystupniho-ukolu-v1","title":"Zad\u00e1n\u00ed v\u00fdstupn\u00edho \u00fakolu V1","text":"<p>Zkombinujeme to, co jsme se zat\u00edm nau\u010dili: vytvo\u0159\u00edme funkci, kter\u00e1 na vstupu dostane barvu, \u010d\u00edslo po\u010d\u00e1te\u010dn\u00ed a koncov\u00e9 LED, a zabarv\u00ed v\u0161echny LED v tomto rozsahu. Ostatn\u00ed LED zhasne.</p> <p>Pro dobrovoln\u00edky</p> <ul> <li> <p>M\u016f\u017eeme vybran\u00e9 LEDky rozsv\u00edtit r\u016fzn\u00fdmi barvami: nap\u0159. funkc\u00ed <code>colors.rainbow()</code> proch\u00e1zet definovan\u00fd rozsah barev</p> </li> <li> <p>M\u00edsto jedn\u00e9 barvy m\u016f\u017eeme zadat po\u010d\u00e1te\u010dn\u00ed a koncovou barvu, p\u0159i\u010dem\u017e LED mezi nimi budou mezi t\u011bmito dv\u011bma barvami postupn\u011b p\u0159ech\u00e1zet.</p> </li> </ul>"},{"location":"elks/lekce6/","title":"Lekce 6 - ADC - joystick, potenciometry","text":"<p>V t\u00e9to lekci se nau\u010d\u00edme pracovat s ADC p\u0159evodn\u00edkem a zpracov\u00e1vat data, kter\u00e9 pomoc\u00ed n\u011bj z\u00edsk\u00e1me.</p> <p>ADC pou\u017e\u00edv\u00e1me pro m\u011b\u0159en\u00ed nap\u011bt\u00ed, kter\u00e9 je v\u00fdstupem z n\u011bkter\u00fdch senzor\u016f. P\u0159ev\u00e1d\u00ed nap\u011bt\u00ed na hodnotu v rozsahu <code>0-1023</code>, kterou pak m\u016f\u017eeme d\u00e1le zpracov\u00e1vat.</p> <p>To vyu\u017eijeme pro \u010dten\u00ed dat z potenciometru a joysticku. Sv\u00e9 \u0159e\u0161en\u00ed op\u011bt m\u016f\u017eeme ps\u00e1t do soubor\u016f z p\u0159edchoz\u00edch cvi\u010den\u00ed, nebo st\u00e1hnout novou kostru.</p>"},{"location":"elks/lekce6/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Nejprve si nap\u00ed\u0161eme program, kter\u00fd n\u00e1m bude \u010d\u00edst data z potenciometru a vypisovat je na monitoru.</p> \u0158e\u0161en\u00ed <pre><code>import * as adc from \"adc\";\n\n// const INPUT_PIN = 10; // pin joysticku\n\nconst INPUT_PIN = 2 // pin potenciometru\n\nadc.configure(INPUT_PIN); // nejd\u0159\u00edve mus\u00edme konfigurovat pin, ze kter\u00e9ho chceme data \u010d\u00edst\n\nsetInterval(() =&gt; { // ka\u017ed\u00fdch 100 ms vy\u010dteme data a vyp\u00ed\u0161eme je do konzole\nconst value = adc.read(INPUT_PIN); // pomoc\u00ed funkce read \u010dteme data z INPUT_PIN\nconsole.log(value); //vypisujeme hodnotu do konzole\n}, 100);\n</code></pre>"},{"location":"elks/lekce6/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Data u\u017e jsme vy\u010detli, ale v\u011bt\u0161inou je budeme muset je\u0161t\u011b upravit. Ve v\u011bt\u0161in\u011b vyu\u017eit\u00ed toti\u017e nem\u016f\u017eeme pou\u017e\u00edt \u010d\u00edslo od <code>0-1023</code>. Proto mus\u00edme data takzvan\u011b p\u0159emapovat na jin\u00fd \u010d\u00edseln\u00fd rozsah, k \u010demu\u017e si nap\u00ed\u0161eme funkci.</p> \u0158e\u0161en\u00ed <pre><code>import * as adc from \"adc\";\n\n// na\u0161e nov\u00e1 funkce, jako parametry m\u00e1 velikost nov\u00e9ho rozsahu a \u010d\u00edslo, kter\u00e9 chceme p\u0159ev\u00e9st\nfunction mapADC(targetRange: number, num: number): number {\nlet result: number = (num / (1023 / targetRange)); // vypo\u010d\u00edtame p\u0159evod na nov\u00fd rozsah\nreturn Math.round(result); // v\u00fdsledek n\u00e1m \u010dasto vyjde jako desetinn\u00e9 \u010d\u00edslo, proto ho zaokrouhl\u00edme\n}\nconst INPUT_PIN = 10;\n\nadc.configure(INPUT_PIN);\n\nsetInterval(() =&gt; {\nconst value = mapADC(255, adc.read(INPUT_PIN)); // pomoc\u00ed na\u0161\u00ed funkce si namapujeme data na rozsah 0-255\nconsole.log(value);\n}, 100);\n</code></pre>"},{"location":"elks/lekce6/#zadani-c","title":"Zad\u00e1n\u00ed C","text":"<p>Nap\u00ed\u0161eme program, kter\u00fd bude pomoc\u00ed dat z potenciometru m\u011bnit jas RGB ledky na ESP.</p> \u0158e\u0161en\u00ed <pre><code>import * as adc from \"adc\";\nimport { SmartLed, LED_WS2812 } from \"smartled\";\n\nconst INPUT_PIN = 2;\nconst LED_PIN = 48;\nconst LED_COUNT = 1;\n\nfunction mapADC(targetRange: number, num: number): number{\nlet result: number = (num / (1023/targetRange));\nreturn Math.round(result);\n}\n\nconst ledStrip = new SmartLed(LED_PIN, LED_COUNT, LED_WS2812);  // p\u0159ipoj\u00ed p\u00e1sek na pin 48, s 1 ledkou a typem WS2812\nadc.configure(INPUT_PIN);\n\nsetInterval(() =&gt; {\nconst value = mapADC(255, adc.read(INPUT_PIN));\nledStrip.set(0, {r: value, g: 0, b:0}) // nastav\u00edme intenzitu \u010derven\u00e9 barvy na hodnotu z potenciometru (0-255)\nledStrip.show();\n}, 10);\n</code></pre>"},{"location":"elks/lekce6/#zadani-d","title":"Zad\u00e1n\u00ed D","text":"<p>Nap\u00ed\u0161eme program, kter\u00fd bude \u010d\u00edst ob\u011b osy joysticku, jedna osa bude ovl\u00e1dat po\u010det sv\u00edt\u00edc\u00edch ledek na LED p\u00e1sku, druh\u00e1 osa jejich barvu.</p> \u0158e\u0161en\u00ed <pre><code>import * as adc from \"adc\";\nimport { SmartLed, LED_WS2812 } from \"smartled\";\nimport * as colors from \"./libs/colors.js\";\n\nconst JOY_X = 10;\nconst JOY_Y = 9;\nconst LED_PIN = 21;\nconst LED_COUNT = 8;\n\nfunction mapADC(rangeFrom: number, rangeTo: number, num: number): number {\nlet result: number = (num / (rangeFrom / rangeTo));\nreturn Math.round(result);\n}\n\nadc.configure(JOY_X);\nadc.configure(JOY_Y);\nconst ledStrip = new SmartLed(LED_PIN, LED_COUNT, LED_WS2812);\n\nsetInterval(() =&gt; {\nconst lenght = mapADC(1023, 7, adc.read(JOY_X)); // nastav\u00ed d\u00e9lku na hodnotu z potenciometru (0-7)\nconst ledColor = mapADC(1023, 360, adc.read(JOY_Y)); // nastav\u00ed barvu na hodnotu z potenciometru (0-360)\nconsole.log(`Lenght: ${lenght}, Color: ${ledColor}`);\nledStrip.clear(); // vyma\u017ee p\u00e1sek\nfor (let i: number = 0; i &lt;= lenght; i++) { // nastav\u00edme barvu na v\u0161echny ledky v rozsahu d\u00e9lky\nledStrip.set(i, colors.rainbow(ledColor))\n}\nledStrip.show();\n}, 10);\n</code></pre>"},{"location":"elks/lekce6/#vystupni-ukol-v1","title":"V\u00fdstupn\u00ed \u00fakol V1","text":"<p>Nap\u00ed\u0161eme program, kter\u00fd bude pomoc\u00ed dat ze dvou potenciometr\u016f m\u011bnit pozici sv\u00edt\u00edc\u00ed ledky na LED p\u00e1sku a jej\u00ed barvu. Vyu\u017eijeme funkci <code>colors.rainbow()</code>.</p>"},{"location":"elks/lekce7/","title":"Lekce 7 - pole","text":"<p>Pole neboli <code>array</code> slou\u017e\u00ed k ulo\u017een\u00ed v\u00edce hodnot stejn\u00e9ho typu. Hodnoty jsou ulo\u017eeny za sebou, m\u016f\u017eeme je do pole p\u0159id\u00e1vat, odeb\u00edrat, a p\u0159istupovat podle indexu.</p> <ul> <li>Pole vytvo\u0159\u00edme pomoc\u00ed hranat\u00fdch z\u00e1vorek     <pre><code>let arr : number[] = [1, 2, 3, 4, 5];  // vytvo\u0159\u00ed pole\n</code></pre></li> <li>K jednotliv\u00fdm prvk\u016fm se dostaneme pomoc\u00ed indexu (po\u0159ad\u00ed v poli) v hranat\u00fdch z\u00e1vork\u00e1ch<ul> <li>Indexov\u00e1n\u00ed za\u010d\u00edn\u00e1 od 0: prvn\u00ed prvek je na indexu 0     <pre><code>let arr : number[] = [1, 2, 3, 4, 5];  // vytvo\u0159\u00ed pole\nlet num : number = arr[0];  // do prom\u011bnn\u00e9 num ulo\u017e\u00edme hodnotu na indexu 0 (tedy 1.)\n</code></pre></li> <li>M\u016f\u017eeme p\u0159istupovat na libovoln\u00e9 m\u00edsto v poli:     <pre><code>let arr : number[] = [1, 2, 3, 4, 5];  // vytvo\u0159\u00ed pole\nlet num : number = arr[2];  // do prom\u011bnn\u00e9 num ulo\u017e\u00edme hodnotu na indexu 2 (tedy 3.)\n</code></pre></li> <li>Index m\u016f\u017eeme pou\u017e\u00edt i pro zm\u011bnu hodnoty     <pre><code>let arr : number[] = [1, 2, 3, 4, 5];  // vytvo\u0159\u00ed pole\narr[2] = 10;  // zm\u011bn\u00ed hodnotu na indexu 2 z 3 na 10: v\u00fdsledn\u00e9 pole bude [1, 2, 10, 4, 5]\n</code></pre></li> </ul> </li> <li>D\u00e9lku pole zjist\u00edme pomoc\u00ed funkce     <pre><code>let arr : number[] = [1, 2, 3, 4, 5];  // vytvo\u0159\u00ed pole\nlet length : number = arr.length; // hodnota length bude 5\n</code></pre></li> <li> <p>Hodnotu na konec pole p\u0159id\u00e1me pomoc\u00ed funkce <code>push</code> <pre><code>let arr : number[] = [1, 2, 3, 4, 5];  // vytvo\u0159\u00ed pole\narr.push(6);  // p\u0159id\u00e1 hodnotu na konec: v\u00fdsledn\u00e9 pole bude [1, 2, 3, 4, 5, 6]\n</code></pre></p> </li> <li> <p>Hodnotu z konce pole odebereme pomoc\u00ed funce <code>pop</code> <pre><code>let arr : number[] = [1, 2, 3, 4, 5];  // vytvo\u0159\u00ed pole\nlet num : number = arr.pop();  // odebere hodnotu z konce: v\u00fdsledn\u00e9 pole bude [1, 2, 3, 4]\n</code></pre></p> </li> </ul> <p>K \u0159e\u0161en\u00ed budeme pot\u0159ebovat stejn\u00e9 n\u00e1stroje jako v p\u0159edchoz\u00ed lekci. Slo\u017eku si m\u016f\u017eete rozbalit jako project7.</p>"},{"location":"elks/lekce7/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Op\u011bt nav\u00e1\u017eeme na p\u0159edchoz\u00ed lekce, a budeme do pole ukl\u00e1dat hodnoty z potenciometru. Vytvo\u0159\u00edme si pole, kter\u00e9 p\u0159i stisku vybran\u00e9ho tla\u010d\u00edtka p\u0159id\u00e1 aktu\u00e1ln\u00ed hodnotu z <code>POT 0</code>. Druh\u00e9 tla\u010d\u00edtko z tohoto pole posledn\u00ed hodnotu sma\u017ee. Stav pole si m\u016f\u017eeme po ka\u017ed\u00e9 zm\u011bn\u011b vypsat pomoc\u00ed <code>console.log(pole)</code>.</p> \u0158e\u0161en\u00ed <pre><code>import { SmartLed, LED_WS2812 } from \"smartled\";\nimport * as colors from \"./libs/colors.js\";\nimport * as adc from \"adc\";\nimport * as gpio from \"gpio\";\n\nconst INPUT_PIN : number = 2;\nconst LED_PIN : number = 21;\nconst LED_COUNT : number = 8;\nconst BTN_PIN : number = 18;\nconst MBTN_PIN : number = 16;\n\nconst ledStrip = new SmartLed(LED_PIN, LED_COUNT); // Nastav\u00edme LED p\u00e1sek\ngpio.pinMode(BTN_PIN, gpio.PinMode.INPUT); // Nastav\u00edme lev\u00e9 tla\u010d\u00edtko\ngpio.pinMode(MBTN_PIN, gpio.PinMode.INPUT); // Nastav\u00edme st\u0159edn\u00ed tla\u010d\u00edtko\nadc.configure(INPUT_PIN); // Nastav\u00edme vstup z POT0\n\nlet arr : number[] = [];\n\ngpio.on(\"falling\", BTN_PIN, () =&gt; { // P\u0159i stisknut\u00ed lev\u00e9ho tla\u010d\u00edtka\narr.push(adc.read(INPUT_PIN)); // P\u0159id\u00e1me do pole nam\u011b\u0159enou hodnotu\nconsole.log(arr); // Vyp\u00ed\u0161eme nov\u00fd stav\n});\ngpio.on(\"falling\", MBTN_PIN, () =&gt; { // P\u0159i stisknut\u00ed st\u0159edn\u00edho tla\u010d\u00edtka\narr.pop(); // Odebereme z pole posledn\u00ed hodnotu\nconsole.log(arr); // Vyp\u00ed\u0161eme nov\u00fd stav\n});\n</code></pre>"},{"location":"elks/lekce7/#vychozi-ukol-v1","title":"V\u00fdchoz\u00ed \u00fakol V1","text":"<p>Tentokr\u00e1t si vytvo\u0159\u00edme o n\u011bco rozs\u00e1hlej\u0161\u00ed program, kter\u00fd nav\u00e1\u017ee na p\u0159edchoz\u00ed \u00fakol. Vytvo\u0159\u00edme si pole \u010d\u00edsel, do kter\u00e9ho pomoc\u00ed prvn\u00edho tla\u010d\u00edtka na\u010dteme nam\u011b\u0159en\u00e9 hodnoty z potenciometru. P\u0159i stisku prvn\u00edho tla\u010d\u00edtka kontrolujeme, jestli u\u017e pole m\u00e1 d\u00e9lku 8. Pokud u\u017e je d\u00e9lka 8, dal\u0161\u00ed hodnoty nep\u0159id\u00e1v\u00e1me a stisk tla\u010d\u00edtka pole nezm\u011bn\u00ed.</p> <p>Druh\u00e9 tla\u010d\u00edtko sma\u017ee posledn\u00ed prvek -- zde kontrolujeme, jestli tam n\u011bjak\u00fd prvek je.</p> <p>T\u0159et\u00ed tla\u010d\u00edtko na z\u00e1klad\u011b hodnot v poli rozsv\u00edt\u00ed LED p\u00e1sek podle nam\u011b\u0159en\u00fdch hodnot. V\u0161echny hodnoty v poli p\u0159evedeme na rozsah <code>colors.rainbow</code> (tedy 0-360) a rozsv\u00edt\u00edme LED na odpov\u00eddaj\u00edc\u00edm indexu nam\u011b\u0159enou hodnotou.</p>"},{"location":"elks/lekce8/","title":"Lekce 8 - \u0158et\u011bzce","text":"<p>Zat\u00edm jsme se za\u0159\u00edzen\u00edm po nahr\u00e1n\u00ed programu komunikovali jednostrann\u011b: pomoc\u00ed <code>console.log()</code> jsme vypisovali r\u016fzn\u00e9 v\u011bci na v\u00fdstup, a ten jsme sledovali pomoc\u00ed p\u0159\u00edkazu <code>Monitor</code>.</p> <p>Na to, abychom za b\u011bhu mohli pos\u00edlat informace do za\u0159\u00edzen\u00ed, pot\u0159ebujeme nov\u00fd datov\u00fd typ: \u0159et\u011bzce.</p> <p>\u0158et\u011bzce jsou sekvence znak\u016f, a umo\u017e\u0148uj\u00ed n\u00e1m p\u0159ed\u00e1vat informace. Datov\u00fd typ, kter\u00fd dr\u017e\u00ed \u0159et\u011bzec, se jmenuje <code>string</code>.</p> <ul> <li>\u0158et\u011bzec je v\u017edy uzav\u0159en\u00fd do uvozovek <code>\"\"</code>, <code>''</code> nebo <code>``</code> <pre><code>let str : string = \"ahoj\";  // vytvo\u0159\u00ed \u0159et\u011bzec\n</code></pre></li> <li>\u0158et\u011bzce m\u016f\u017eeme spojovat pomoc\u00ed <code>+</code> <pre><code>let str : string = \"ahoj\" + \" \" + \"jak se m\u00e1\u0161?\";  // vytvo\u0159\u00ed \u0159et\u011bzec \"ahoj jak se m\u00e1\u0161?\"\n\nlet answer : string = \"dob\u0159e\";\n\nlet str2 : string = \"ahoj \" + answer;  // ahoj dob\u0159e\n</code></pre></li> <li>Speci\u00e1ln\u00edm p\u0159\u00edpadem jsou form\u00e1tovac\u00ed \u0159et\u011bzce, kam se dosad\u00ed hodnota prom\u011bnn\u00e9     <pre><code>//! pozor jin\u00e9 uvozovky\nlet str3 : string = `ahoj ${answer}`;  // ahoj dob\u0159e\n</code></pre></li> <li>Kdy\u017e spoj\u00edme \u0159et\u011bzec s \u010d\u00edslem, \u010d\u00edslo se automaticky p\u0159evede na \u0159et\u011bzec a spoj\u00ed se stejn\u00fdm zp\u016fsobem     <pre><code>let str4 : string = answer + \" \" + 5;  // dob\u0159e 5\n\nlet num : number = 5;\nlet str5 : string = \"Je mi \" + number + \" let\";\n</code></pre></li> </ul> Automatick\u00fd p\u0159evod na \u0159et\u011bzec <p>S\u010d\u00edt\u00e1n\u00ed \u0159et\u011bzc\u016f a \u010d\u00edsel nefunguje ve v\u0161ech jazyc\u00edch, jde o chov\u00e1n\u00ed specifick\u00e9 pro TypeScript(JavaScript) a p\u00e1r podobn\u00fdch jazyk\u016f. Nenechte se zasko\u010dit t\u00edm, jak se to chov\u00e1: <pre><code>let result : string = \"5 + 1 je: \" + 5 + 1;\n</code></pre> V <code>result</code> bude <code>\"5 + 1 je: 51\"</code>!</p> <p>5 se p\u0159id\u00e1 do \u0159et\u011bzce, a pot\u00e9 se tam p\u0159id\u00e1 1, nese\u010dtou se p\u0159edem.</p> <p>Stejn\u011b jako ostatn\u00ed typy je m\u016f\u017eeme p\u0159ed\u00e1vat do funkc\u00ed a vracet: <pre><code>function greetName(name: string) : void {\nconsole.log(\"Ahoj \" + name);\n}\n</code></pre></p> <p>Na dne\u0161n\u00ed cvi\u010den\u00ed si op\u011bt m\u016f\u017eeme st\u00e1hnout zip. </p>"},{"location":"elks/lekce8/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Nejd\u0159\u00edve se vr\u00e1t\u00edme k funkci <code>console.log()</code>, d\u00edky kter\u00e9 jsme vypisovali r\u016fzn\u00e9 hodnoty. Tato funkce bere jako argument \u0159et\u011bzec; pokud argument nen\u00ed \u0159et\u011bzec, p\u0159edem definovan\u00fdm zp\u016fsobem se na \u0159et\u011bzec automaticky p\u0159evede.</p> <p>Jako prvn\u00ed \u00fakol si vyzkou\u0161\u00edme spojit \u0159et\u011bzec a \u010d\u00edslo s t\u00edm, co u\u017e zn\u00e1me:</p> <p>Nap\u00ed\u0161eme program, kter\u00fd p\u0159i stisku tla\u010d\u00edtka vyp\u00ed\u0161e na v\u00fdstup <code>\"Potenciometr nam\u011b\u0159il X.\"</code>, kde X je aktu\u00e1ln\u00ed hodnota nam\u011b\u0159en\u00e1 z <code>POT0</code>.</p> \u0158e\u0161en\u00ed <pre><code>import * as gpio from \"gpio\";\nimport * as adc from \"adc\";\n\n\nconst BTN_LEFT = 18;\n\nconst POT0_PIN = 2;\n\ngpio.pinMode(BTN_LEFT, gpio.PinMode.INPUT);\n\nadc.configure(POT0_PIN);\n\ngpio.on(\"falling\", BTN_LEFT, () =&gt; {\nconsole.log(\"Potenciometr nam\u011b\u0159il \" + adc.read(POT0_PIN) + \".\");\n});\n</code></pre>"},{"location":"elks/lekce8/#cteni-ze-vstupu","title":"\u010cten\u00ed ze vstupu","text":"<p>Aby komunikace se za\u0159\u00edzen\u00edm nebyla pouze jednostrann\u00e1, a my mohli z po\u010d\u00edta\u010de pos\u00edlat nov\u00e9 p\u0159\u00edkazy za b\u011bhu, pou\u017eijeme p\u0159ilo\u017een\u00fd program <code>readline</code>. Podobn\u011b jako v p\u0159\u00edpadu LED p\u00e1sku mus\u00edme vytvo\u0159it hodnotu typu readline pomoc\u00ed <code>const reader = new readline(false)</code>.</p> <p>Jakmile m\u00e1me vytvo\u0159en\u00fd objekt typu readline, pomoc\u00ed <code>await reader.read()</code> po\u010dk\u00e1me na vstup. Jeliko\u017e jde o speci\u00e1ln\u00ed funkci, m\u016f\u017eeme ji volat pouze z nov\u00e9 funkce, kter\u00e1 je ozna\u010dena jako <code>async function</code>.</p> Uk\u00e1zka pr\u00e1ce s \u0159et\u011bzcem s readline <pre><code>import { stdout } from \"stdio\";\nimport { readline } from \"./libs/readline.js\";\n\n//* \u0159et\u011bzce\nasync function echo() {\nstdout.write(\"Napi\u0161 n\u011bjak\u00fd text a stiskni enter.\\n\");\nconst reader = new readline(false);  // vytvo\u0159\u00ed novou instanci t\u0159\u00eddy readline\nwhile (true) {  // opakuje se donekone\u010dna\nconst line = await reader.read();  // p\u0159e\u010dte \u0159\u00e1dek z konzole\nstdout.write(\"Zadal jsi: \" + line + \"\\n\");  // vyp\u00ed\u0161e \u0159\u00e1dek na konzoli\nstdout.write(`Druh\u00e1 mo\u017enost v\u00fdpisu: Zadal jsi: ${line}\\n`);  // vyp\u00ed\u0161e \u0159\u00e1dek na konzoli\n\nif (line == \"konec\") {  // pokud je \u0159\u00e1dek roven \"konec\"\nstdout.write(\"Ukon\u010duji.\\n\");  // vyp\u00ed\u0161e text na konzoli\nbreak;  // ukon\u010d\u00ed cyklus\n}\n}\nreader.close();  // ukon\u010d\u00ed \u010dten\u00ed z konzole\n}\n\necho();  // zavol\u00e1 funkci echo\n</code></pre> Pro z\u00e1jemce: Async a await <p>Funkce, kter\u00e9 zn\u00e1me dote\u010f, vykon\u00e1valy v\u0161echny p\u0159\u00edkazy hned, v po\u0159ad\u00ed tak, jak jsou po sob\u011b napsan\u00e9. Funkce, kter\u00e9 \u010dekaj\u00ed na n\u011bjak\u00fd vstup od u\u017eivatele, ozna\u010dujeme jako asynchronn\u00ed (async). Funkce <code>reader.read()</code> po spu\u0161t\u011bn\u00ed \u010dek\u00e1 na textov\u00fd vstup od u\u017eivatele, a mezit\u00edm se m\u016f\u017eou vykon\u00e1vat ostatn\u00ed ud\u00e1losti. Kdy\u017e p\u0159ed funkci d\u00e1me <code>await</code>, zna\u010d\u00edme tak, \u017ee \u010dek\u00e1me na v\u00fdsledek, a dal\u0161\u00ed \u0159\u00e1dek k\u00f3du se vykon\u00e1 a\u017e kdy\u017e na vstup p\u0159ijde \u0159et\u011bzec zakon\u010den\u00fd nov\u00fdm \u0159\u00e1dkem.</p>"},{"location":"elks/lekce8/#zadani-b","title":"Zad\u00e1n\u00ed B","text":"<p>Nap\u00ed\u0161eme program, kter\u00fd se zept\u00e1, jak se jmenujeme, a po\u010dk\u00e1 na odpov\u011b\u010f. A\u017e program dostane odpov\u011b\u010f, vyp\u00ed\u0161e na konzoli <code>Jmenuje\u0161 se \"</code> a jm\u00e9no, kter\u00e9 jsme mu zadali.</p> \u0158e\u0161en\u00ed <pre><code>import { readline } from \"./libs/readline.js\"\n\nasync function askName(){\nconsole.log(\"Jak se jmenuje\u0161?\");\nconst reader = new readline(false);\nlet name : string = await reader.read();\nconsole.log(\"Jmenuje\u0161 se \" + name);\n}\n\naskName();\n</code></pre>"},{"location":"elks/lekce8/#standardni-funkce","title":"Standardn\u00ed funkce","text":"<p>Ka\u017ed\u00fd jazyk nab\u00edz\u00ed \u0159adu funkc\u00ed na pr\u00e1ci se \u0159et\u011bzci. M\u016f\u017eeme je nap\u0159\u00edklad p\u0159ev\u00e1d\u011bt na \u010d\u00edsla, obracet, m\u011bnit znaky, a podobn\u011b. Pro n\u00e1s je zaj\u00edmav\u00e9 um\u011bt na\u010d\u00edst ze vstupu \u010d\u00edslo: to m\u016f\u017eeme ud\u011blat tak, \u017ee pomoc\u00ed funkce <code>read()</code> dostaneme \u0159et\u011bzec ze vstupu, a pot\u00e9 na n\u011bm zavol\u00e1me funkci <code>parseInt()</code>, kter\u00e1 n\u00e1m ho p\u0159evede na celo\u010d\u00edselnou hodnotu.</p> <pre><code>let str : string = \"20\"; // \u0158et\u011bzec se znaky pro 20\nlet num : number = parseInt(str); // P\u0159evedeme \u0159et\u011bzec na \u010d\u00edslo, a m\u016f\u017eeme s n\u00edm po\u010d\u00edtat\nlet doubled : number = num * 2; // doubled bude m\u00edt hodnotu 40\n</code></pre>"},{"location":"elks/lekce8/#vychozi-uloha-v1","title":"V\u00fdchoz\u00ed \u00faloha V1","text":"<p>Napi\u0161te (asynchronn\u00ed) funkci, kter\u00e1 po\u010dk\u00e1 na vstup od u\u017eivatele, p\u0159evede ho na \u010d\u00edslo, a pot\u00e9 rozsv\u00edt\u00ed LEDku na desce pomoc\u00ed <code>colors.rainbow()</code> s hodnotou na\u010dten\u00e9ho \u010d\u00edsla.</p> <p>Pro dobrovoln\u00edky</p> <p>U\u017eivatel velice jednodu\u0161e narozd\u00edl od po\u010d\u00edta\u010de m\u016f\u017ee ud\u011blat chybu, a napsat \u010d\u00edslo, kter\u00e9 nepat\u0159\u00ed do rozsahu pro tuto funkci. Pomoc\u00ed while cyklu m\u016f\u017eeme opakovat dotaz na vstup, dokud u\u017eivatel nezad\u00e1 spr\u00e1vnou hodnotu, tedy takovou, kter\u00e1 je v\u011bt\u0161\u00ed ne\u017e <code>0</code> a men\u0161\u00ed ne\u017e <code>360</code>.</p>"},{"location":"elks/lekce9/","title":"Lekce 9 - radio","text":"<p>Na ELKS je k dispozici jednoduch\u00e1 bezdr\u00e1tov\u00e1 komunikace na vzd\u00e1lenost jednotek metr\u016f.</p> <ul> <li>A\u017e 16 \"skupin\", v\u0161echny desky ve stejn\u00e9 skupin\u011b p\u0159ijmaj\u00ed zpr\u00e1vy od v\u0161ech ostatn\u00edch z\u00e1rove\u0148</li> <li> <p>Podporuje t\u0159i datov\u00e9 typy:</p> <ul> <li>\u0158et\u011bzce do d\u00e9lky 30 znak\u016f</li> <li>\u010c\u00edsla</li> <li>Kl\u00ed\u010d - hodnota, kdy kl\u00ed\u010d je \u0159et\u011bzec do 22 znak\u016f a hodnota je \u010d\u00edslo</li> </ul> </li> </ul>"},{"location":"elks/lekce9/#spusteni","title":"Spu\u0161t\u011bn\u00ed","text":"<p>Pokud chcete pou\u017e\u00edvat radio, je t\u0159eba importovat jeho knihovnu a pot\u00e9 zavolat <code>begin(&lt;\u010d\u00edslo skupiny&gt;);</code></p> <pre><code>import * as radio from \"simpleradio\";\n\n// zapnut\u00ed radia, 4 je \u010d\u00edslo skupiny. M\u016f\u017ee b\u00fdt od 0 do 15 v\u010detn\u011b.\nradio.begin(4);\n\n// vypnut\u00ed radia\nradio.end();\n</code></pre>"},{"location":"elks/lekce9/#odesilani-dat","title":"Odes\u00edl\u00e1n\u00ed dat","text":"<p>K odes\u00edl\u00e1n\u00ed slou\u017e\u00ed 3 <code>send</code> funkce:</p> <pre><code>// Odesl\u00e1n\u00ed \u0159etezce\nradio.sendString(\"Ahoj!\");\n\nlet hodnota = 22;\nradio.sendString(`Hodnota: ${hodnota}`); // s form\u00e1tov\u00e1n\u00edm\n</code></pre> <pre><code>// Odesl\u00e1n\u00ed \u010d\u00edsla\nradio.sendNumber(42);\nradio.sendNumber(-2.42);\n</code></pre> <pre><code>// Odesl\u00e1n\u00ed kl\u00ed\u010d - hodnota\nradio.sendKeyValue(\"rychlost\", 10);\n</code></pre>"},{"location":"elks/lekce9/#rychle-odesilani","title":"Rychl\u00e9 odes\u00edl\u00e1n\u00ed","text":"<p>Pokud se rychle za sebou pokus\u00edte odeslat dv\u011b r\u016fzn\u00e9 hodnoty, je mo\u017en\u00e9, \u017ee doraz\u00ed pouze jedna - je t\u0159eba po\u010dkat p\u0159ed odesl\u00e1n\u00edm dal\u0161\u00ed hodnoty:</p> <pre><code>async function main() {\nwhile (true) {\nradio.sendKeyValue(\"x\", 10);\nawait sleep(50); // \u010dek\u00e1n\u00ed, aby se hodnota X stihla odeslat\nradio.sendKeyValue(\"y\", 20);\n\nawait sleep(1000);\n}\n}\nmain();\n</code></pre>"},{"location":"elks/lekce9/#prijmani-dat","title":"P\u0159ijm\u00e1n\u00ed dat","text":"<p>Pro p\u0159ijm\u00e1n\u00ed dat slou\u017e\u00ed funkce <code>on</code>. Prvn\u00ed parametr callbacku je v\u017edy p\u0159ijat\u00e1 hodnota, druh\u00e1 je objekt s informacemi o p\u0159ijmu - od koho (<code>address</code>) a s jaku s\u00edlou sign\u00e1lu (<code>rssi</code>) data p\u0159i\u0161la.</p> <pre><code>// \u0159et\u011bzce\nradio.on(\"string\", (retezec, info) =&gt; {\nconsole.log(\n`P\u0159ijal jsem \u0159et\u011bzec '${retezec}'.\n    Od: ${info.address},\n    s\u00edla sign\u00e1lu: ${info.rssi})\n`\n);\n});\n</code></pre> <pre><code>// \u010d\u00edslo\nradio.on(\"number\", (cislo, info) =&gt; {\nconsole.log(\n`P\u0159ijal jsem \u010d\u00edslo ${cislo}.\n    Od: ${info.address},\n    s\u00edla sign\u00e1lu: ${info.rssi})\n`\n);\n});\n</code></pre> <pre><code>// kl\u00ed\u010d - hodnota\nradio.on(\"keyvalue\", (klic, hodnota, info) =&gt; {\nconsole.log(\n`P\u0159ijal jsem ${klic} = ${hodnota}.\n    Od: ${info.address},\n    s\u00edla sign\u00e1lu: ${info.rssi})\n`\n);\n});\n</code></pre> <p>Ka\u017edou kategorii p\u0159ijmac\u00edho callbacku lze i zru\u0161it:</p> <pre><code>radio.off(\"string\");\nradio.off(\"number\");\nradio.off(\"keyvalue\");\n</code></pre>"},{"location":"elks/lekce9/#zadani-a","title":"Zad\u00e1n\u00ed A","text":"<p>Vytvo\u0159te program, kter\u00fd pomoc\u00ed kl\u00ed\u010d-hodnota bude p\u0159es r\u00e1dio odes\u00edlat stav t\u0159\u00ed tla\u010d\u00edtek na desce (stisknuto == <code>1</code>, nestisknuto == <code>0</code>). Z\u00e1rove\u0148 bude reagovat na p\u0159\u00edchoz\u00ed hodnoty a rosvicovat prvn\u00ed 3 LED na desce podle p\u0159\u00edchoz\u00edho stavu.</p> <p>Jako kl\u00ed\u010de pou\u017eijte <code>sw0</code>, <code>sw1</code> a <code>sw2</code>. V\u017edy, kdy\u017e p\u0159ijde kl\u00ed\u010d <code>sw0</code> s hodnotou 1, rozsv\u00edt\u00edte LED-G, a kdy\u017e 0, tak ji zhasnete, a stejn\u011b tak pro dal\u0161\u00ed dv\u011b tla\u010d\u00edtka a LED.</p> <p>Najd\u011bte kamar\u00e1da, abyste si mohli navz\u00e1jem zkusit, zda program funguje (jeden vys\u00edl\u00e1, druh\u00fd p\u0159ijm\u00e1).</p> \u0158e\u0161en\u00ed <pre><code>import * as radio from \"simpleradio\";\nimport * as gpio from \"gpio\";\n\nradio.begin(5); // skupina 5\n\nconst PIN_SW0 = 18;\nconst PIN_SW1 = 16;\nconst PIN_SW2 = 42;\n\nconst PIN_LED0 = 17;\nconst PIN_LED1 = 15;\nconst PIN_LED2 = 45;\n\n// Nastav\u00edme tla\u010d\u00edtka jako vstupy\ngpio.pinMode(PIN_SW0, gpio.PinMode.INPUT);\ngpio.pinMode(PIN_SW1, gpio.PinMode.INPUT);\ngpio.pinMode(PIN_SW2, gpio.PinMode.INPUT);\n\ngpio.on(\"falling\", PIN_SW0, () =&gt; {\n// P\u0159i stisknut\u00ed tla\u010d\u00edtka 0\nradio.sendKeyValue(\"sw0\", 1); // ode\u0161leme hodnotu 1 s kl\u00ed\u010dem sw0\n});\ngpio.on(\"rising\", PIN_SW0, () =&gt; {\n// P\u0159i uvoln\u011bn\u00ed tla\u010d\u00edtka 0\nradio.sendKeyValue(\"sw0\", 0); // ode\u0161leme hodnotu 0 s kl\u00ed\u010dem sw0\n});\n\ngpio.on(\"falling\", PIN_SW1, () =&gt; {\nradio.sendKeyValue(\"sw1\", 1);\n});\ngpio.on(\"rising\", PIN_SW1, () =&gt; {\nradio.sendKeyValue(\"sw1\", 0);\n});\n\ngpio.on(\"falling\", PIN_SW2, () =&gt; {\nradio.sendKeyValue(\"sw2\", 1);\n});\ngpio.on(\"rising\", PIN_SW2, () =&gt; {\nradio.sendKeyValue(\"sw2\", 0);\n});\n\n\n\n// Nastav\u00edme LED piny jako v\u00fdstupy\ngpio.pinMode(PIN_LED0, gpio.PinMode.OUTPUT);\ngpio.pinMode(PIN_LED1, gpio.PinMode.OUTPUT);\ngpio.pinMode(PIN_LED2, gpio.PinMode.OUTPUT);\n\n// Zpracov\u00e1n\u00ed p\u0159\u00edchoz\u00edch spr\u00e1v\nradio.on(\"keyvalue\", (klic, hodnota, info) =&gt; {\nif (klic === \"sw0\") {\ngpio.write(PIN_LED0, hodnota);\n} else if (klic === \"sw1\") {\ngpio.write(PIN_LED1, hodnota);\n} else if (klic === \"sw2\") {\ngpio.write(PIN_LED2, hodnota);\n}\n});\n</code></pre>"},{"location":"elks/lekce9/#vychozi-ukol-v1","title":"V\u00fdchoz\u00ed \u00fakol V1","text":"<p>Zm\u011b\u0148t\u011b program ze zad\u00e1n\u00ed A tak, aby m\u00edsto tla\u010d\u00edtek vy\u010d\u00edtal potenciometr, a m\u00edsto ledek rozsvicoval LED p\u00e1sek. Je na v\u00e1s, zda vzl\u00e1dnete rozsvicovat a pohybovat duhou, nebo pouze jednou z LED podle toho, jak se nato\u010d\u00ed potenciometr na vys\u00edla\u010di.</p>"},{"location":"elks/roboplace/","title":"Roboplace","text":"<p>Na kreslen\u00ed pou\u017eijte novou knihovnu jacserial </p> <p>Zde si m\u016f\u017eete st\u00e1hnou uk\u00e1zkov\u00fd projekt i s knihovnou</p>"},{"location":"elks/roboplace/#kod-pro-elks","title":"K\u00f3d pro ELKS","text":"<p>ELKS po stisknut\u00ed tla\u010d\u00edtka po\u0161le paint p\u0159\u00edkaz do po\u010d\u00edta\u010de pomoc\u00ed jacserial knihovny.</p> <pre><code>import * as gpio from \"gpio\";\nimport * as jacserial from \"./libs/jacserial.js\"\n\nconst color_list = [\"white\",  \"platinum\", \"grey\",   \"black\", \"pink\",   \"red\",      \"orange\", \"brown\", \"yellow\", \"lime\",     \"green\",  \"cyan\", \"lblue\",  \"blue\",     \"mauve\",  \"purple\"]\n\n\ngpio.pinMode(18, gpio.PinMode.INPUT_PULLUP);\n\ngpio.on(\"falling\", 18, ()=&gt; {\n// generates random X, Y and COLOR values \nlet x:number = Math.round(Math.random()*99);\nlet y:number = Math.round(Math.random()*99);\nlet color:string = color_list[Math.round(Math.random()*99)];\n\n// sends the RoboPlace paint command\njacserial.send_RoboPlace_cmd(\"paint \" + x + \" \" + y + \" \" + color);\n})\n</code></pre> <p>Webovou str\u00e1nku si m\u016f\u017eete otev\u0159\u00edt na adrese https://roboplace.vercel.app </p> <p></p>"},{"location":"elks/roboplace/#kod-pro-pc","title":"K\u00f3d pro pc","text":"<ul> <li> <p>St\u00e1hn\u011bte si repozit\u00e1\u0159 </p> <ul> <li>Bu\u010f pomc\u00ed zipu a pot\u00e9 ho extrahujte</li> <li>Nebo pomoc\u00ed <code>git clone https://github.com/C2Coder/RoboPlace_client</code></li> </ul> </li> <li> <p>Otev\u0159ete si slo\u017eku v termin\u00e1lu</p> </li> <li> <p>Nainstalujte pot\u0159ebn\u00e9 python moduly pomoc\u00ed p\u0159\u00edkazu <code>pip install -r requirements.txt</code></p> </li> <li> <p>Spus\u0165te aplikaci</p> <ul> <li>Pokud m\u00e1te ELKS, nebo jin\u00e9 za\u0159\u00edzen\u00ed s jaculem <code>python3 ./RoboPlaceJaculus.py &lt;port&gt;</code> a port na kter\u00e9m ho m\u00e1te p\u0159ipojen\u00fd.</li> <li>Pokud m\u00e1te n\u011bco jin\u00e9ho, nap\u0159. micro:bit <code>python3 ./RoboPlaceNormal.py &lt;port&gt;</code></li> </ul> </li> <li>Pokud n\u011bco nefunguje, pingn\u011bte m\u011b na discordu (@C2Coder)</li> <li>Pokud n\u011bkdo chce vid\u011bt k\u00f3d pro webovku github</li> </ul>"},{"location":"elksBox/","title":"ELKS (ESP Learning Kit Starter)","text":"<p>Pro ELKS jsme vyvinuli krabi\u010dku, kter\u00e1 z n\u011bj d\u011bl\u00e1 mobiln\u00ed interaktivn\u00ed kouzlo. Tento n\u00e1vod V\u00e1m pom\u016f\u017ee krabi\u010dku sestavit.</p>"},{"location":"elksBox/#dily","title":"D\u00edly:","text":"<ul> <li>D\u0159ev\u00ed\u010dka pro horn\u00ed a spodn\u00ed r\u00e1my</li> <li>Spodn\u00ed p\u0159ekli\u017eka</li> <li>Horn\u00ed plexisklo</li> <li>Distan\u010dn\u00ed sloupky M3/8mm</li> <li>\u0160rouby M3</li> <li>Matky M3</li> <li>Tla\u010d\u00edtkov\u00fd modul</li> <li>Sv\u011btlovody</li> <li>Hmatn\u00edky na tla\u010d\u00edtka a potenciometry</li> </ul>"},{"location":"elksBox/#navod-na-slozeni","title":"N\u00e1vod na slo\u017een\u00ed","text":"<p> 1. D\u0159ev\u00ed\u010dka pro stavbu r\u00e1m\u016f si rozlo\u017e\u00edme dle obr\u00e1zku.</p> <p> 2. Za pou\u017eit\u00ed master krabi\u010dky a svorek sestav\u00edme d\u0159ev\u00ed\u010dka. Stykov\u00e9 plo\u0161ky jsou zn\u00e1zorn\u011bn\u00e9 na p\u0159edchoz\u00edm obr\u00e1zku.</p> <p> 3. Kapi\u010dkou lepidla p\u0159ilep\u00edme d\u0159ev\u00ed\u010dka k sob\u011b (av\u0161ak ne k masteru). Pou\u017eijeme aktiv\u00e1tor.</p> <p> 4. Slepen\u00e9 r\u00e1my je\u0161t\u011b pojist\u00edme lepidlem.</p> <p> 5. Na horn\u00ed r\u00e1m p\u0159esn\u011b nalep\u00edme plexisklo (ve spr\u00e1vn\u00e9m oto\u010den\u00ed). M\u016f\u017eeme nejd\u0159\u00edve zajistit p\u00e1skou.</p> <p> 6. Na USB konektor nalep\u00edme ztlus\u0165ovac\u00ed desti\u010dku. Je doporu\u010deno nejprve ubrousit ro\u017eek u mont\u00e1\u017en\u00ed d\u00edry kv\u016fli mo\u017en\u00e9 kolizi.</p> <p> 7. Do mont\u00e1\u017en\u00edch d\u011br ELKSu za\u0161roubujeme distan\u010dn\u00ed sloupky. Seshora dva na sebe, zdola jeden. Ut\u00e1hneme fest.</p> <p>  8. ELKS zasad\u00edme do p\u0159edvrtan\u00e9 p\u0159ekli\u017eky a n\u00e1sledn\u011b do spodn\u00edho r\u00e1mu. DPS m\u00e1 zapadnout dovnit\u0159.</p> <p> 9. Zaklapneme horn\u00ed d\u00edl krabi\u010dky a skrz plexisklo do\u010dasn\u011b za\u0161roubujeme dal\u0161\u00ed sloupky. Sta\u010d\u00ed lehce dot\u00e1hnout.</p> <p>  10. V obr\u00e1cen\u00e9 poloze stla\u010d\u00edme r\u00e1m a n\u00e1sledn\u011b vnit\u0159ek krabi\u010dky.</p> <p> 11. Ve svisl\u00e9 poloze bodov\u011b zalep\u00edme spodn\u00ed p\u0159ekli\u017eku. Pou\u017eijeme aktiv\u00e1tor. Pot\u00e9 krabi\u010dku rozlo\u017e\u00edme a kout lepidlem kvalitn\u011b zalijeme.</p> <p>  12. Do tla\u010d\u00edtkov\u00e9ho modulu vlo\u017e\u00edme 4 sv\u011btlovody a zespoda 3 tla\u010d\u00edtkov\u00e9 hmatn\u00edky.</p> <p> 13. Tla\u010d\u00edtkov\u00fd modul vlo\u017e\u00edme na ELKS. Nasad\u00edme tak\u00e9 hmatn\u00edky na potenciometry.</p> <p> 14. Na spodn\u00ed stran\u011b pou\u017eijeme mati\u010dky k fixaci distan\u010dn\u00edch sloupk\u016f.</p> <p> 15. Krabi\u010dku zaklapneme a pomoc\u00ed \u0161roub\u016f st\u00e1hneme dohromady. :)</p>"},{"location":"roboSvit/","title":"O co jde?","text":"<p>RoboSvit je mal\u00e9 sv\u011bt\u00fdlko nap\u00e1jen\u00e9 na hodinkovou baterku. Skl\u00e1d\u00e1 se ze sedmi LEDek a jednoho rezistoru. Jeho z\u00e1kladn\u00ed rozm\u011bry \u010din\u00ed 70 mm na \u0161\u00ed\u0159ku, 75 mm na v\u00fd\u0161ku a je vy\u0159ezan\u00e9 na laseru z 3 mm p\u0159ekli\u017eky. Na p\u0159edn\u00ed stran\u011b sv\u011bt\u00fdlka je vygrav\u00edrovan\u00fd motiv stanu. D\u00edrka na horn\u00ed stran\u011b je p\u0159ipraven\u00e1 na prot\u00e1hnut\u00ed prov\u00e1zku, aby bylo mo\u017en\u00e9 jej nosit pov\u011b\u0161en\u00fd na krku. Odb\u011br cel\u00e9ho sv\u011bt\u00fdlka \u010din\u00ed 2.3 mA a pr\u016fm\u011brn\u00e1 doba sv\u00edcen\u00ed je 85 hodin.</p> <p>Baterie CR2032 - Nap\u011bt\u00ed: 3 V - Kapacita: 200 mAh</p> <p>LED - Nap\u011bt\u00ed: 2.0 V - Proud: 20 mA</p> <p>Rezistor - Odpor: 100 \u03a9 - P\u0159\u00edkon: 0.6 W - Tolerance: 1 % - \u0158ada: E24</p> <p>Vytvo\u0159il Jakub Andr\u00fdsek.</p>"},{"location":"roboSvit/manual/","title":"Manu\u00e1l","text":""},{"location":"roboSvit/manual/#potrebny-material","title":"Pot\u0159ebn\u00fd materi\u00e1l","text":"<ul> <li>D\u0159ev\u011bn\u00fd d\u00edlek</li> <li>7 LED</li> <li>1 rezistor</li> <li>Dr\u017e\u00e1k baterie</li> <li>Baterie CR2032</li> </ul>"},{"location":"roboSvit/manual/#navod-na-slozeni","title":"N\u00e1vod na slo\u017een\u00ed","text":"<p> 1. P\u0159iprav\u00edme si pot\u0159ebn\u00fd materi\u00e1l</p> <p> 2. Vlo\u017e\u00edme 2 LEDky podle zn\u00e1zorn\u011bn\u00ed na obr\u00e1zku</p> <p> 3. LEDku dotla\u010d\u00edme k p\u0159ekli\u017ece</p> <p> 4. Ohneme vn\u011bj\u0161\u00ed no\u017ei\u010dku LEDky podle \u0161ipky</p> <p> 5. Vlo\u017e\u00edme a ohneme vn\u011bj\u0161\u00ed no\u017ei\u010dky v\u0161ech ostatn\u00edch LEDek</p> <p> 6. Ohnut\u00e9 no\u017ei\u010dky zap\u00e1j\u00edme dohromady</p> <p> 7. Vn\u011bj\u0161\u00ed no\u017ei\u010dky jsou zap\u00e1jen\u00e9</p> <p> 8. Ohneme v\u0161echny vnit\u0159n\u00ed no\u017ei\u010dky LEDek</p> <p> 9. Zap\u00e1j\u00edme vnit\u0159n\u00ed no\u017ei\u010dky LEDek dohromady</p> <p> 10. Vnit\u0159n\u00ed no\u017ei\u010dky jsou zap\u00e1jen\u00e9</p> <p> 11. Vlo\u017e\u00edme rezistor podle obr\u00e1zku a dotla\u010d\u00edme ho k p\u0159ekli\u017ece</p> <p> 12. Spodn\u00ed pohled na desku</p> <p> 13. Ohneme vn\u011bj\u0161\u00ed no\u017ei\u010dku a p\u0159ip\u00e1j\u00edme k LEDk\u00e1m</p> <p> 14. Zakr\u00e1t\u00edme no\u017ei\u010dku rezistoru podle obr\u00e1zku</p> <p> 15. Nachyst\u00e1me si dr\u017e\u00e1k na baterii</p> <p> 16. Dr\u017e\u00e1k kapkou lepidla p\u0159ilep\u00edme k p\u0159ekli\u017ece jako na obr\u00e1zku</p> <p> 17. K dr\u017e\u00e1ku bateri\u00ed p\u0159ip\u00e1j\u00edme rezistor a no\u017ei\u010dku LEDky</p> <p> 18. Zakr\u00e1t\u00edme no\u017ei\u010dku rezistoru a LEDky podle obr\u00e1zku</p> <p> 18. Vlo\u017e\u00edme baterku</p> <p> 20. Dokon\u010den\u00fd RoboSvit</p>"},{"location":"solderingChallenge/","title":"O co jde?","text":"<p>P\u00e1jec\u00ed v\u00fdzva obsahuje jeden relativn\u011b jednoduch\u00fd obvod zalo\u017een\u00fd na popul\u00e1rn\u00edm integrovan\u00e9m obvodu 555. Pokud se ti poda\u0159\u00ed spr\u00e1vn\u011b zap\u00e1jet v\u0161echny sou\u010d\u00e1stky, tak po zapojen\u00ed do USB portu za\u010dne LED blikat s frekvenc\u00ed cca 2 Hz.</p> <p></p>"},{"location":"solderingChallenge/manual/","title":"Manu\u00e1l","text":""},{"location":"solderingChallenge/manual/#jak-postupovat","title":"Jak postupovat?","text":"<ul> <li>v\u017edy p\u00e1jej pouze jednu \u00farove\u0148 najednou!</li> <li>jeliko\u017e mal\u00e9 sou\u010d\u00e1stky na sob\u011b nemaj\u00ed popisky, cho\u010f si pro sou\u010d\u00e1stky po jedn\u00e9.   V\u017edy si dones jednu sou\u010d\u00e1stku, tu zap\u00e1jej a a\u017e pak si b\u011b\u017e pro dal\u0161\u00ed.</li> <li>za\u010dni p\u0159ip\u00e1jen\u00edm integrovan\u00e9ho obvodu - na n\u011bj pot\u0159ebuje\u0161 nejv\u00edce prostoru. U   integrovan\u00e9ho obvodu si pohl\u00eddej jeho orientaci. Pokud si nejsi jist\u00fd, zeptej   se lektora.</li> <li>pak m\u016f\u017ee\u0161 zap\u00e1jet ostatn\u00ed sou\u010d\u00e1stky. U kondenz\u00e1tor\u016f a rezistor\u016f nez\u00e1le\u017e\u00ed na   orientaci. U LED diody ano - lektor ti uk\u00e1\u017ee, jak m\u00e1 b\u00fdt spr\u00e1vn\u011b oto\u010dena.</li> <li>Jakmile m\u00e1\u0161 zap\u00e1jeno, nalep zespodu USB konektoru podlo\u017eku (op\u011bt ti ji vyd\u00e1   lektor) a m\u016f\u017ee obvod vyzkou\u0161et!</li> </ul>"},{"location":"solderingChallenge/manual/#co-kam-patri","title":"Co kam pat\u0159\u00ed?","text":""},{"location":"solderingChallenge/manual/#uroven-0","title":"\u00darove\u0148 0","text":"<p>Pozor</p> <p>Pozor, u kondenz\u00e1toru 4.7u z\u00e1le\u017e\u00ed na polarit\u011b. Popisek kondenz\u00e1toru mus\u00ed sm\u011b\u0159ovat ven desky. Zeptej se lektora, pokud si nejsi jist\u00fd.</p>"},{"location":"solderingChallenge/manual/#uroven-1","title":"\u00darove\u0148 1","text":"<p>Pozor</p> <p>Pozor, u kondenz\u00e1toru 4.7u z\u00e1le\u017e\u00ed na polarit\u011b. Popisek kondenz\u00e1toru mus\u00ed sm\u011b\u0159ovat ven z desky (obr\u00e1cen\u011b ne\u017e u L0). Zeptej se lektora, pokud si nejsi jist\u00fd.</p>"},{"location":"solderingChallenge/manual/#uroven-2","title":"\u00darove\u0148 2","text":""},{"location":"solderingChallenge/manual/#uroven-3","title":"\u00darove\u0148 3","text":""},{"location":"solderingChallenge/manual/#uroven-4","title":"\u00darove\u0148 4","text":""},{"location":"solderingChallenge/manual/#jak-to-funguje","title":"Jak to funguje?","text":"<p>Pokud t\u011b zaj\u00edm\u00e1, jak funguje obvod, kter\u00fd jsi pr\u00e1v\u011b zap\u00e1jel, pod\u00edvej se nap\u0159. na tento web. Tam se do\u010dte\u0161, jak funguje integrovan\u00fd obvod 555. V na\u0161\u00ed p\u00e1jec\u00ed v\u00fdzv\u011b pou\u017e\u00edv\u00e1me takzvan\u00e9 astabiln\u00ed zapojen\u00ed neboli multivibr\u00e1tor, kter\u00fd je na v\u00fd\u0161e zm\u00edn\u011bn\u00e9 str\u00e1nce vysv\u011btlen.</p>"},{"location":"team/","title":"Index","text":"Robotika Brno (Robotics Brno) V\u00edce o na\u0161em t\u00fdmu  Ji\u0159\u00ed V\u00e1cha  <p>Jirka je hlavn\u00ed vedouc\u00ed Robot\u00e1rny.</p> <p> vacha@helceletka.cz vachajirka </p>  Honza Mr\u00e1zek  <p> email@honzamrazek.cz in/jan-mr\u00e1zek-ba74a364 yaqwsx honzamrazek.cz </p>  Vojt\u011bch Bo\u010dek  <p>Hlavn\u011b ho nenechte sahat na elektroniku, Vojta je toti\u017e program\u00e1tor a interakce s fyzick\u00fdmi v\u011bcmi nedopad\u00e1 dob\u0159e. Na Robot\u00e1rnu se dostal na st\u0159edn\u00ed a roboty si okam\u017eit\u011b zamiloval. Za Robot\u00e1rnu se \u00fasp\u011b\u0161n\u011b z\u00fa\u010dastnil n\u011bkolika sout\u011b\u017e\u00ed a vypracoval dv\u011b pr\u00e1ce SO\u010c. Te\u010f u\u017e n\u011bkolik let pracuje jako v\u00fdvoj\u00e1\u0159 v oblasti kyberbezpe\u010dnosti. Ve voln\u00e9m \u010dase fot\u00ed, krot\u00ed ko\u010dky a proch\u00e1z\u00ed se po hor\u00e1ch.</p> <p> vbocek@gmail.com in/vojtech-bocek Tasssadar tasssadar.github.com </p>  Renata Zemanov\u00e1  <p>Pro Ren\u010du je technika jedno velk\u00e9 kouzlo. I proto se j\u00ed v\u011bnuje a sna\u017e\u00ed se j\u00ed p\u0159ij\u00edt co nejv\u00edce na kloub. Bav\u00ed ji p\u00e1jen\u00ed i v\u011bt\u0161ina rukod\u011bln\u00fdch prac\u00ed. R\u00e1da sv\u00e9 v\u011bdomosti p\u0159ed\u00e1v\u00e1 d\u00e1l, bav\u00ed ji p\u0159em\u00fd\u0161let a nesn\u00e1\u0161\u00ed stereotypy. Je velmi spole\u010densk\u00e1 a p\u0159\u00e1telsk\u00e1. Boj\u00ed se v\u00fd\u0161ek a p\u0159esto miluje hory a rozhledny a fascinuj\u00ed ji kr\u00e1sn\u00e9 v\u00fdhledy do p\u0159\u00edrody. Hraje tak\u00e9 na kytaru a zp\u00edv\u00e1 ve sboru. R\u00e1da by se n\u011bkdy pod\u00edvala na Island, do Norska nebo do Kanady. Na na\u0161em t\u00e1bo\u0159e je na pozici hlavn\u00ed vedouc\u00ed.</p> <p> renata7zemanova </p>  Jakub Andr\u00fdsek  <p>Kuba je \u010dlov\u011bk pro v\u0161echno, r\u00e1d pom\u016f\u017ee v\u0161ude tam, kde je t\u0159eba. Neodrad\u00ed ho ani nestandardn\u00ed situace a jde si v\u017edy za sv\u00fdm c\u00edlem.  Studoval informatiku na gymn\u00e1ziu V\u00edde\u0148sk\u00e1 a nyn\u00ed pokra\u010duje na FI MUNI v Brn\u011b. Nej\u010dast\u011bji ho najdete viset na sk\u00e1le, nebo sed\u011bt u po\u010d\u00edta\u010de, kde vym\u00fd\u0161l\u00ed n\u011bjak\u00e9 nov\u00e9 projekty. U n\u00e1s se v\u011bnuje hlavn\u011b programov\u00e1n\u00ed a tak\u00e9 3D modelov\u00e1n\u00ed v krou\u017eku, kter\u00fd u\u017e n\u011bkolik let vede.</p> <p> email@kubaandrysek.cz in/jakub-andrysek JakubAndrysek kubaandrysek.cz </p>  Tom\u00e1\u0161 Vavrinec  <p>Tom je \u010dlov\u011bk prim\u00e1rn\u011b pro elektroniku, p\u0159esto nepohrdne ani dobrou t\u00e1borovou hrou nebo jinou kuli\u0161arnou. Kdy\u017e se pro n\u011bco nadchne nep\u0159estane dokud neuzn\u00e1 d\u00edlo za hotov\u00e9. Aktu\u00e1ln\u011b je studentem \u00fastavu mikroelektrotechniky na fakult\u011b FEKT univerzity VUT a z\u00e1rove\u0148 pracuje na v\u00fdvoji m\u011b\u0159\u00edc\u00edch za\u0159\u00edzen\u00ed.  B\u00fdv\u00e1 k vid\u011bn\u00ed na nejr\u016fzn\u011bj\u0161\u00edch hor\u00e1ch i za pol\u00e1rn\u00edm kruhem, p\u0159esto \u017ee nej\u010dast\u011bji ho najdete v okol\u00ed technologick\u00e9ho parku VUT, nebo u po\u010d\u00edta\u010de \u010di osciloskopu, jak se sna\u017e\u00ed zprovoznit hra\u010dky nejmenovan\u00e9mu program\u00e1torovi. U n\u00e1s se zab\u00fdv\u00e1 n\u00e1vrhem elektroniky a mechaniky v\u0161eho druhu a spolu s Kubou Andr\u00fdskem vede krou\u017eek 3D modelov\u00e1n\u00ed a 3D tisku.</p> <p> TVavrinec </p>  Tom\u00e1\u0161 Rohl\u00ednek  <p> in/tom\u00e1\u0161-rohl\u00ednek-13233a1a8 haberturdeur </p>  Jarek Malec  <p> in/jaroslavmalec cednik </p>  Jakub Streit  <p> cednik </p>  Honza \u0160krabal  <p>Honza je \u010dlov\u011bk do pohody. R\u00e1d v\u0161em pom\u016f\u017ee a p\u0159ed\u00e1 sv\u00e9 zku\u0161enosti. Aktu\u00e1ln\u011b studuje na FIT (Fakult\u011b informa\u010dn\u00edch technologi\u00ed) univerzity VUT v Brn\u011b. Kdy\u017e se zrovna nev\u011bnuje \u0161kole, tak d\u011bl\u00e1 na nejr\u016fzn\u011bj\u0161\u00edch projektech.  O robotiku a programov\u00e1n\u00ed se zaj\u00edm\u00e1 ji\u017e od 6. t\u0159\u00eddy a nyn\u00ed vede n\u011bkolik\u00e1t\u00fdm rokem krou\u017eek Lego Mindstorms.  Mezi jeho hlavn\u00ed z\u00e1jmy pat\u0159\u00ed elektronika a mechanika, nejv\u00edce ho bav\u00ed p\u00e1jet.  Takt\u00e9\u017e jej m\u016f\u017eete potkat na robotick\u00e9m t\u00e1bo\u0159e, na kter\u00e9m ka\u017edoro\u010dn\u011b pom\u00e1h\u00e1.</p> <p> Robot7769 </p>  Petr Kubica  <p> cubicap@email.cz cubicap cubicap.eu </p>  MiroslavBurda  <p> MiroslavBurda </p>  Martin Pt\u00e1\u010dek  <p> MarPta </p>  Bed\u0159ich Said  <p> in/bedrich-said bsaid </p>  Martin Kousal  <p> mkousal </p>  Jarek P\u00e1ral  <p> in/jaroslav-paral JarekParal JarekParal/JarekParal </p>  Petr Stoura\u010d  <p> in/petrstourac </p>"}]}